package parser

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleSciName
	ruleTail
	ruleName
	ruleHybridFormula
	ruleHybridFormulaFull
	ruleHybridFormulaPart
	ruleNamedHybrid
	ruleNamedSpeciesHybrid
	ruleNamedGenusHybrid
	ruleSingleName
	ruleNameUninomial
	ruleNameApprox
	ruleNameComp
	ruleNameSpecies
	ruleGenusWord
	ruleInfraspGroup
	ruleInfraspEpithet
	ruleSpeciesEpithet
	ruleComparison
	ruleRank
	ruleRankNotho
	ruleRankOtherUncommon
	ruleRankOther
	ruleRankVar
	ruleRankForma
	ruleRankSsp
	ruleRankAgamo
	ruleSubgenusOrSuperspecies
	ruleSubgenus
	ruleSubgenus2
	ruleSubgenus1
	ruleUninomialCombo
	ruleUninomialCombo1
	ruleUninomialCombo2
	ruleRankUninomial
	ruleRankUninomialPlain
	ruleRankUninomialNotho
	ruleUninomial
	ruleUninomialWord
	ruleAbbrSubgenus
	ruleAbbrGenus
	ruleCapWord
	ruleCapWord1
	ruleCapWordWithDash
	ruleUpperAfterDash
	ruleLowerAfterDash
	ruleTwoLetterGenus
	ruleWord
	ruleWord1
	ruleWordStartsWithDigit
	ruleWord2
	ruleWordApostr
	ruleWord4
	ruleMultiDashedWord
	ruleHybridChar
	ruleApproxNameIgnored
	ruleApproximation
	ruleAuthorship
	ruleAuthorshipCombo
	ruleOriginalAuthorship
	ruleOriginalAuthorshipComb
	ruleCombinationAuthorship
	ruleBasionymAuthorshipMissingParens
	ruleMissingParensStart
	ruleMissingParensEnd
	ruleBasionymAuthorshipYearMisformed
	ruleBasionymAuthorship
	ruleBasionymAuthorship1
	ruleBasionymAuthorship2Parens
	ruleAuthorsGroup
	ruleAuthorsTeam
	ruleAuthorSep
	ruleAuthorSep1
	ruleAuthorSep2
	ruleAuthorSepSpanish
	ruleAuthorEx
	ruleAuthorEmend
	ruleAuthor
	ruleAuthor0
	ruleAuthor1
	ruleAuthor2
	ruleUnknownAuthor
	ruleAuthorWord
	ruleAuthorEtAl
	ruleAuthorWord2
	ruleAuthorWord3
	ruleAuthorWordSoft
	ruleCapAuthorWord
	ruleAllCapsAuthorWord
	ruleFilius
	ruleFiliusF
	ruleFiliusFNoSpace
	ruleAuthorSuffix
	ruleAuthorPrefixGlued
	ruleAuthorPrefix
	ruleAuthorPrefix2
	ruleAuthorPrefix1
	ruleAuthorUpperChar
	ruleAuthorLowerChar
	ruleYear
	ruleYearRange
	ruleYearWithDot
	ruleYearApprox
	ruleYearWithPage
	ruleYearWithParens
	ruleYearWithChar
	ruleYearNum
	ruleNameUpperChar
	ruleUpperCharExtended
	ruleUpperChar
	ruleNameLowerChar
	ruleMiscodedChar
	ruleLowerCharExtended
	ruleLowerChar
	ruleSpaceCharEOI
	ruleNums
	ruleLowerGreek
	ruleLowerASCII
	ruleUpperASCII
	ruleApostrophe
	ruleApostrASCII
	ruleApostrOther
	ruleDash
	ruleSlash
	rule_
	ruleMultipleSpace
	ruleSingleSpace
	ruleOtherSpace
	ruleEND
)

var rul3s = [...]string{
	"Unknown",
	"SciName",
	"Tail",
	"Name",
	"HybridFormula",
	"HybridFormulaFull",
	"HybridFormulaPart",
	"NamedHybrid",
	"NamedSpeciesHybrid",
	"NamedGenusHybrid",
	"SingleName",
	"NameUninomial",
	"NameApprox",
	"NameComp",
	"NameSpecies",
	"GenusWord",
	"InfraspGroup",
	"InfraspEpithet",
	"SpeciesEpithet",
	"Comparison",
	"Rank",
	"RankNotho",
	"RankOtherUncommon",
	"RankOther",
	"RankVar",
	"RankForma",
	"RankSsp",
	"RankAgamo",
	"SubgenusOrSuperspecies",
	"Subgenus",
	"Subgenus2",
	"Subgenus1",
	"UninomialCombo",
	"UninomialCombo1",
	"UninomialCombo2",
	"RankUninomial",
	"RankUninomialPlain",
	"RankUninomialNotho",
	"Uninomial",
	"UninomialWord",
	"AbbrSubgenus",
	"AbbrGenus",
	"CapWord",
	"CapWord1",
	"CapWordWithDash",
	"UpperAfterDash",
	"LowerAfterDash",
	"TwoLetterGenus",
	"Word",
	"Word1",
	"WordStartsWithDigit",
	"Word2",
	"WordApostr",
	"Word4",
	"MultiDashedWord",
	"HybridChar",
	"ApproxNameIgnored",
	"Approximation",
	"Authorship",
	"AuthorshipCombo",
	"OriginalAuthorship",
	"OriginalAuthorshipComb",
	"CombinationAuthorship",
	"BasionymAuthorshipMissingParens",
	"MissingParensStart",
	"MissingParensEnd",
	"BasionymAuthorshipYearMisformed",
	"BasionymAuthorship",
	"BasionymAuthorship1",
	"BasionymAuthorship2Parens",
	"AuthorsGroup",
	"AuthorsTeam",
	"AuthorSep",
	"AuthorSep1",
	"AuthorSep2",
	"AuthorSepSpanish",
	"AuthorEx",
	"AuthorEmend",
	"Author",
	"Author0",
	"Author1",
	"Author2",
	"UnknownAuthor",
	"AuthorWord",
	"AuthorEtAl",
	"AuthorWord2",
	"AuthorWord3",
	"AuthorWordSoft",
	"CapAuthorWord",
	"AllCapsAuthorWord",
	"Filius",
	"FiliusF",
	"FiliusFNoSpace",
	"AuthorSuffix",
	"AuthorPrefixGlued",
	"AuthorPrefix",
	"AuthorPrefix2",
	"AuthorPrefix1",
	"AuthorUpperChar",
	"AuthorLowerChar",
	"Year",
	"YearRange",
	"YearWithDot",
	"YearApprox",
	"YearWithPage",
	"YearWithParens",
	"YearWithChar",
	"YearNum",
	"NameUpperChar",
	"UpperCharExtended",
	"UpperChar",
	"NameLowerChar",
	"MiscodedChar",
	"LowerCharExtended",
	"LowerChar",
	"SpaceCharEOI",
	"Nums",
	"LowerGreek",
	"LowerASCII",
	"UpperASCII",
	"Apostrophe",
	"ApostrASCII",
	"ApostrOther",
	"Dash",
	"Slash",
	"_",
	"MultipleSpace",
	"SingleSpace",
	"OtherSpace",
	"END",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[34m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type Engine struct {
	baseEngine

	Buffer string
	buffer []rune
	rules  [130]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *Engine) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *Engine) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *Engine
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *Engine) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *Engine) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func Pretty(pretty bool) func(*Engine) error {
	return func(p *Engine) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*Engine) error {
	return func(p *Engine) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *Engine) Init(options ...func(*Engine) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 SciName <- <(_? Name Tail END)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				{
					position2, tokenIndex2 := position, tokenIndex
					if !_rules[rule_]() {
						goto l2
					}
					goto l3
				l2:
					position, tokenIndex = position2, tokenIndex2
				}
			l3:
				if !_rules[ruleName]() {
					goto l0
				}
				if !_rules[ruleTail]() {
					goto l0
				}
				if !_rules[ruleEND]() {
					goto l0
				}
				add(ruleSciName, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Tail <- <((_ / ';' / ',') .*)?> */
		func() bool {
			{
				position5 := position
				{
					position6, tokenIndex6 := position, tokenIndex
					{
						position8, tokenIndex8 := position, tokenIndex
						if !_rules[rule_]() {
							goto l9
						}
						goto l8
					l9:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(';') {
							goto l10
						}
						position++
						goto l8
					l10:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(',') {
							goto l6
						}
						position++
					}
				l8:
				l11:
					{
						position12, tokenIndex12 := position, tokenIndex
						if !matchDot() {
							goto l12
						}
						goto l11
					l12:
						position, tokenIndex = position12, tokenIndex12
					}
					goto l7
				l6:
					position, tokenIndex = position6, tokenIndex6
				}
			l7:
				add(ruleTail, position5)
			}
			return true
		},
		/* 2 Name <- <(NamedHybrid / HybridFormula / SingleName)> */
		func() bool {
			position13, tokenIndex13 := position, tokenIndex
			{
				position14 := position
				{
					position15, tokenIndex15 := position, tokenIndex
					if !_rules[ruleNamedHybrid]() {
						goto l16
					}
					goto l15
				l16:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleHybridFormula]() {
						goto l17
					}
					goto l15
				l17:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleSingleName]() {
						goto l13
					}
				}
			l15:
				add(ruleName, position14)
			}
			return true
		l13:
			position, tokenIndex = position13, tokenIndex13
			return false
		},
		/* 3 HybridFormula <- <(SingleName (_ (HybridFormulaPart / HybridFormulaFull))+)> */
		func() bool {
			position18, tokenIndex18 := position, tokenIndex
			{
				position19 := position
				if !_rules[ruleSingleName]() {
					goto l18
				}
				if !_rules[rule_]() {
					goto l18
				}
				{
					position22, tokenIndex22 := position, tokenIndex
					if !_rules[ruleHybridFormulaPart]() {
						goto l23
					}
					goto l22
				l23:
					position, tokenIndex = position22, tokenIndex22
					if !_rules[ruleHybridFormulaFull]() {
						goto l18
					}
				}
			l22:
			l20:
				{
					position21, tokenIndex21 := position, tokenIndex
					if !_rules[rule_]() {
						goto l21
					}
					{
						position24, tokenIndex24 := position, tokenIndex
						if !_rules[ruleHybridFormulaPart]() {
							goto l25
						}
						goto l24
					l25:
						position, tokenIndex = position24, tokenIndex24
						if !_rules[ruleHybridFormulaFull]() {
							goto l21
						}
					}
				l24:
					goto l20
				l21:
					position, tokenIndex = position21, tokenIndex21
				}
				add(ruleHybridFormula, position19)
			}
			return true
		l18:
			position, tokenIndex = position18, tokenIndex18
			return false
		},
		/* 4 HybridFormulaFull <- <(HybridChar (_ SingleName)?)> */
		func() bool {
			position26, tokenIndex26 := position, tokenIndex
			{
				position27 := position
				if !_rules[ruleHybridChar]() {
					goto l26
				}
				{
					position28, tokenIndex28 := position, tokenIndex
					if !_rules[rule_]() {
						goto l28
					}
					if !_rules[ruleSingleName]() {
						goto l28
					}
					goto l29
				l28:
					position, tokenIndex = position28, tokenIndex28
				}
			l29:
				add(ruleHybridFormulaFull, position27)
			}
			return true
		l26:
			position, tokenIndex = position26, tokenIndex26
			return false
		},
		/* 5 HybridFormulaPart <- <(HybridChar _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position30, tokenIndex30 := position, tokenIndex
			{
				position31 := position
				if !_rules[ruleHybridChar]() {
					goto l30
				}
				if !_rules[rule_]() {
					goto l30
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l30
				}
				{
					position32, tokenIndex32 := position, tokenIndex
					if !_rules[rule_]() {
						goto l32
					}
					if !_rules[ruleInfraspGroup]() {
						goto l32
					}
					goto l33
				l32:
					position, tokenIndex = position32, tokenIndex32
				}
			l33:
				add(ruleHybridFormulaPart, position31)
			}
			return true
		l30:
			position, tokenIndex = position30, tokenIndex30
			return false
		},
		/* 6 NamedHybrid <- <(NamedGenusHybrid / NamedSpeciesHybrid)> */
		func() bool {
			position34, tokenIndex34 := position, tokenIndex
			{
				position35 := position
				{
					position36, tokenIndex36 := position, tokenIndex
					if !_rules[ruleNamedGenusHybrid]() {
						goto l37
					}
					goto l36
				l37:
					position, tokenIndex = position36, tokenIndex36
					if !_rules[ruleNamedSpeciesHybrid]() {
						goto l34
					}
				}
			l36:
				add(ruleNamedHybrid, position35)
			}
			return true
		l34:
			position, tokenIndex = position34, tokenIndex34
			return false
		},
		/* 7 NamedSpeciesHybrid <- <(GenusWord (_ Subgenus)? (_ Comparison)? _ HybridChar _? SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position38, tokenIndex38 := position, tokenIndex
			{
				position39 := position
				if !_rules[ruleGenusWord]() {
					goto l38
				}
				{
					position40, tokenIndex40 := position, tokenIndex
					if !_rules[rule_]() {
						goto l40
					}
					if !_rules[ruleSubgenus]() {
						goto l40
					}
					goto l41
				l40:
					position, tokenIndex = position40, tokenIndex40
				}
			l41:
				{
					position42, tokenIndex42 := position, tokenIndex
					if !_rules[rule_]() {
						goto l42
					}
					if !_rules[ruleComparison]() {
						goto l42
					}
					goto l43
				l42:
					position, tokenIndex = position42, tokenIndex42
				}
			l43:
				if !_rules[rule_]() {
					goto l38
				}
				if !_rules[ruleHybridChar]() {
					goto l38
				}
				{
					position44, tokenIndex44 := position, tokenIndex
					if !_rules[rule_]() {
						goto l44
					}
					goto l45
				l44:
					position, tokenIndex = position44, tokenIndex44
				}
			l45:
				if !_rules[ruleSpeciesEpithet]() {
					goto l38
				}
				{
					position46, tokenIndex46 := position, tokenIndex
					if !_rules[rule_]() {
						goto l46
					}
					if !_rules[ruleInfraspGroup]() {
						goto l46
					}
					goto l47
				l46:
					position, tokenIndex = position46, tokenIndex46
				}
			l47:
				add(ruleNamedSpeciesHybrid, position39)
			}
			return true
		l38:
			position, tokenIndex = position38, tokenIndex38
			return false
		},
		/* 8 NamedGenusHybrid <- <(HybridChar _? SingleName)> */
		func() bool {
			position48, tokenIndex48 := position, tokenIndex
			{
				position49 := position
				if !_rules[ruleHybridChar]() {
					goto l48
				}
				{
					position50, tokenIndex50 := position, tokenIndex
					if !_rules[rule_]() {
						goto l50
					}
					goto l51
				l50:
					position, tokenIndex = position50, tokenIndex50
				}
			l51:
				if !_rules[ruleSingleName]() {
					goto l48
				}
				add(ruleNamedGenusHybrid, position49)
			}
			return true
		l48:
			position, tokenIndex = position48, tokenIndex48
			return false
		},
		/* 9 SingleName <- <(NameComp / NameApprox / NameSpecies / NameUninomial)> */
		func() bool {
			position52, tokenIndex52 := position, tokenIndex
			{
				position53 := position
				{
					position54, tokenIndex54 := position, tokenIndex
					if !_rules[ruleNameComp]() {
						goto l55
					}
					goto l54
				l55:
					position, tokenIndex = position54, tokenIndex54
					if !_rules[ruleNameApprox]() {
						goto l56
					}
					goto l54
				l56:
					position, tokenIndex = position54, tokenIndex54
					if !_rules[ruleNameSpecies]() {
						goto l57
					}
					goto l54
				l57:
					position, tokenIndex = position54, tokenIndex54
					if !_rules[ruleNameUninomial]() {
						goto l52
					}
				}
			l54:
				add(ruleSingleName, position53)
			}
			return true
		l52:
			position, tokenIndex = position52, tokenIndex52
			return false
		},
		/* 10 NameUninomial <- <(UninomialCombo / Uninomial)> */
		func() bool {
			position58, tokenIndex58 := position, tokenIndex
			{
				position59 := position
				{
					position60, tokenIndex60 := position, tokenIndex
					if !_rules[ruleUninomialCombo]() {
						goto l61
					}
					goto l60
				l61:
					position, tokenIndex = position60, tokenIndex60
					if !_rules[ruleUninomial]() {
						goto l58
					}
				}
			l60:
				add(ruleNameUninomial, position59)
			}
			return true
		l58:
			position, tokenIndex = position58, tokenIndex58
			return false
		},
		/* 11 NameApprox <- <(GenusWord (_ SpeciesEpithet)? _ Approximation ApproxNameIgnored)> */
		func() bool {
			position62, tokenIndex62 := position, tokenIndex
			{
				position63 := position
				if !_rules[ruleGenusWord]() {
					goto l62
				}
				{
					position64, tokenIndex64 := position, tokenIndex
					if !_rules[rule_]() {
						goto l64
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l64
					}
					goto l65
				l64:
					position, tokenIndex = position64, tokenIndex64
				}
			l65:
				if !_rules[rule_]() {
					goto l62
				}
				if !_rules[ruleApproximation]() {
					goto l62
				}
				if !_rules[ruleApproxNameIgnored]() {
					goto l62
				}
				add(ruleNameApprox, position63)
			}
			return true
		l62:
			position, tokenIndex = position62, tokenIndex62
			return false
		},
		/* 12 NameComp <- <(GenusWord _ Comparison (_ SpeciesEpithet)?)> */
		func() bool {
			position66, tokenIndex66 := position, tokenIndex
			{
				position67 := position
				if !_rules[ruleGenusWord]() {
					goto l66
				}
				if !_rules[rule_]() {
					goto l66
				}
				if !_rules[ruleComparison]() {
					goto l66
				}
				{
					position68, tokenIndex68 := position, tokenIndex
					if !_rules[rule_]() {
						goto l68
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l68
					}
					goto l69
				l68:
					position, tokenIndex = position68, tokenIndex68
				}
			l69:
				add(ruleNameComp, position67)
			}
			return true
		l66:
			position, tokenIndex = position66, tokenIndex66
			return false
		},
		/* 13 NameSpecies <- <(GenusWord (_? (Subgenus / SubgenusOrSuperspecies))? _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position70, tokenIndex70 := position, tokenIndex
			{
				position71 := position
				if !_rules[ruleGenusWord]() {
					goto l70
				}
				{
					position72, tokenIndex72 := position, tokenIndex
					{
						position74, tokenIndex74 := position, tokenIndex
						if !_rules[rule_]() {
							goto l74
						}
						goto l75
					l74:
						position, tokenIndex = position74, tokenIndex74
					}
				l75:
					{
						position76, tokenIndex76 := position, tokenIndex
						if !_rules[ruleSubgenus]() {
							goto l77
						}
						goto l76
					l77:
						position, tokenIndex = position76, tokenIndex76
						if !_rules[ruleSubgenusOrSuperspecies]() {
							goto l72
						}
					}
				l76:
					goto l73
				l72:
					position, tokenIndex = position72, tokenIndex72
				}
			l73:
				if !_rules[rule_]() {
					goto l70
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l70
				}
				{
					position78, tokenIndex78 := position, tokenIndex
					if !_rules[rule_]() {
						goto l78
					}
					if !_rules[ruleInfraspGroup]() {
						goto l78
					}
					goto l79
				l78:
					position, tokenIndex = position78, tokenIndex78
				}
			l79:
				add(ruleNameSpecies, position71)
			}
			return true
		l70:
			position, tokenIndex = position70, tokenIndex70
			return false
		},
		/* 14 GenusWord <- <((AbbrGenus / UninomialWord) !(_ AuthorWord))> */
		func() bool {
			position80, tokenIndex80 := position, tokenIndex
			{
				position81 := position
				{
					position82, tokenIndex82 := position, tokenIndex
					if !_rules[ruleAbbrGenus]() {
						goto l83
					}
					goto l82
				l83:
					position, tokenIndex = position82, tokenIndex82
					if !_rules[ruleUninomialWord]() {
						goto l80
					}
				}
			l82:
				{
					position84, tokenIndex84 := position, tokenIndex
					if !_rules[rule_]() {
						goto l84
					}
					if !_rules[ruleAuthorWord]() {
						goto l84
					}
					goto l80
				l84:
					position, tokenIndex = position84, tokenIndex84
				}
				add(ruleGenusWord, position81)
			}
			return true
		l80:
			position, tokenIndex = position80, tokenIndex80
			return false
		},
		/* 15 InfraspGroup <- <(InfraspEpithet (_ InfraspEpithet)? (_ InfraspEpithet)?)> */
		func() bool {
			position85, tokenIndex85 := position, tokenIndex
			{
				position86 := position
				if !_rules[ruleInfraspEpithet]() {
					goto l85
				}
				{
					position87, tokenIndex87 := position, tokenIndex
					if !_rules[rule_]() {
						goto l87
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l87
					}
					goto l88
				l87:
					position, tokenIndex = position87, tokenIndex87
				}
			l88:
				{
					position89, tokenIndex89 := position, tokenIndex
					if !_rules[rule_]() {
						goto l89
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l89
					}
					goto l90
				l89:
					position, tokenIndex = position89, tokenIndex89
				}
			l90:
				add(ruleInfraspGroup, position86)
			}
			return true
		l85:
			position, tokenIndex = position85, tokenIndex85
			return false
		},
		/* 16 InfraspEpithet <- <((Rank _?)? !AuthorEx Word (_ Authorship)?)> */
		func() bool {
			position91, tokenIndex91 := position, tokenIndex
			{
				position92 := position
				{
					position93, tokenIndex93 := position, tokenIndex
					if !_rules[ruleRank]() {
						goto l93
					}
					{
						position95, tokenIndex95 := position, tokenIndex
						if !_rules[rule_]() {
							goto l95
						}
						goto l96
					l95:
						position, tokenIndex = position95, tokenIndex95
					}
				l96:
					goto l94
				l93:
					position, tokenIndex = position93, tokenIndex93
				}
			l94:
				{
					position97, tokenIndex97 := position, tokenIndex
					if !_rules[ruleAuthorEx]() {
						goto l97
					}
					goto l91
				l97:
					position, tokenIndex = position97, tokenIndex97
				}
				if !_rules[ruleWord]() {
					goto l91
				}
				{
					position98, tokenIndex98 := position, tokenIndex
					if !_rules[rule_]() {
						goto l98
					}
					if !_rules[ruleAuthorship]() {
						goto l98
					}
					goto l99
				l98:
					position, tokenIndex = position98, tokenIndex98
				}
			l99:
				add(ruleInfraspEpithet, position92)
			}
			return true
		l91:
			position, tokenIndex = position91, tokenIndex91
			return false
		},
		/* 17 SpeciesEpithet <- <(!AuthorEx Word (_? Authorship)?)> */
		func() bool {
			position100, tokenIndex100 := position, tokenIndex
			{
				position101 := position
				{
					position102, tokenIndex102 := position, tokenIndex
					if !_rules[ruleAuthorEx]() {
						goto l102
					}
					goto l100
				l102:
					position, tokenIndex = position102, tokenIndex102
				}
				if !_rules[ruleWord]() {
					goto l100
				}
				{
					position103, tokenIndex103 := position, tokenIndex
					{
						position105, tokenIndex105 := position, tokenIndex
						if !_rules[rule_]() {
							goto l105
						}
						goto l106
					l105:
						position, tokenIndex = position105, tokenIndex105
					}
				l106:
					if !_rules[ruleAuthorship]() {
						goto l103
					}
					goto l104
				l103:
					position, tokenIndex = position103, tokenIndex103
				}
			l104:
				add(ruleSpeciesEpithet, position101)
			}
			return true
		l100:
			position, tokenIndex = position100, tokenIndex100
			return false
		},
		/* 18 Comparison <- <('c' 'f' '.'?)> */
		func() bool {
			position107, tokenIndex107 := position, tokenIndex
			{
				position108 := position
				if buffer[position] != rune('c') {
					goto l107
				}
				position++
				if buffer[position] != rune('f') {
					goto l107
				}
				position++
				{
					position109, tokenIndex109 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l109
					}
					position++
					goto l110
				l109:
					position, tokenIndex = position109, tokenIndex109
				}
			l110:
				add(ruleComparison, position108)
			}
			return true
		l107:
			position, tokenIndex = position107, tokenIndex107
			return false
		},
		/* 19 Rank <- <((RankForma / RankVar / RankSsp / RankOther / RankOtherUncommon / RankAgamo / RankNotho) (_? LowerGreek ('.' / &SpaceCharEOI))?)> */
		func() bool {
			position111, tokenIndex111 := position, tokenIndex
			{
				position112 := position
				{
					position113, tokenIndex113 := position, tokenIndex
					if !_rules[ruleRankForma]() {
						goto l114
					}
					goto l113
				l114:
					position, tokenIndex = position113, tokenIndex113
					if !_rules[ruleRankVar]() {
						goto l115
					}
					goto l113
				l115:
					position, tokenIndex = position113, tokenIndex113
					if !_rules[ruleRankSsp]() {
						goto l116
					}
					goto l113
				l116:
					position, tokenIndex = position113, tokenIndex113
					if !_rules[ruleRankOther]() {
						goto l117
					}
					goto l113
				l117:
					position, tokenIndex = position113, tokenIndex113
					if !_rules[ruleRankOtherUncommon]() {
						goto l118
					}
					goto l113
				l118:
					position, tokenIndex = position113, tokenIndex113
					if !_rules[ruleRankAgamo]() {
						goto l119
					}
					goto l113
				l119:
					position, tokenIndex = position113, tokenIndex113
					if !_rules[ruleRankNotho]() {
						goto l111
					}
				}
			l113:
				{
					position120, tokenIndex120 := position, tokenIndex
					{
						position122, tokenIndex122 := position, tokenIndex
						if !_rules[rule_]() {
							goto l122
						}
						goto l123
					l122:
						position, tokenIndex = position122, tokenIndex122
					}
				l123:
					if !_rules[ruleLowerGreek]() {
						goto l120
					}
					{
						position124, tokenIndex124 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l125
						}
						position++
						goto l124
					l125:
						position, tokenIndex = position124, tokenIndex124
						{
							position126, tokenIndex126 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l120
							}
							position, tokenIndex = position126, tokenIndex126
						}
					}
				l124:
					goto l121
				l120:
					position, tokenIndex = position120, tokenIndex120
				}
			l121:
				add(ruleRank, position112)
			}
			return true
		l111:
			position, tokenIndex = position111, tokenIndex111
			return false
		},
		/* 20 RankNotho <- <((('n' 'o' 't' 'h' 'o' (('v' 'a' 'r') / ('f' 'o') / 'f' / ('s' 'u' 'b' 's' 'p') / ('s' 's' 'p') / ('s' 'p') / ('m' 'o' 'r' 't' 'h') / ('s' 'u' 'p' 's' 'p') / ('s' 'u'))) / ('n' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position127, tokenIndex127 := position, tokenIndex
			{
				position128 := position
				{
					position129, tokenIndex129 := position, tokenIndex
					if buffer[position] != rune('n') {
						goto l130
					}
					position++
					if buffer[position] != rune('o') {
						goto l130
					}
					position++
					if buffer[position] != rune('t') {
						goto l130
					}
					position++
					if buffer[position] != rune('h') {
						goto l130
					}
					position++
					if buffer[position] != rune('o') {
						goto l130
					}
					position++
					{
						position131, tokenIndex131 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l132
						}
						position++
						if buffer[position] != rune('a') {
							goto l132
						}
						position++
						if buffer[position] != rune('r') {
							goto l132
						}
						position++
						goto l131
					l132:
						position, tokenIndex = position131, tokenIndex131
						if buffer[position] != rune('f') {
							goto l133
						}
						position++
						if buffer[position] != rune('o') {
							goto l133
						}
						position++
						goto l131
					l133:
						position, tokenIndex = position131, tokenIndex131
						if buffer[position] != rune('f') {
							goto l134
						}
						position++
						goto l131
					l134:
						position, tokenIndex = position131, tokenIndex131
						if buffer[position] != rune('s') {
							goto l135
						}
						position++
						if buffer[position] != rune('u') {
							goto l135
						}
						position++
						if buffer[position] != rune('b') {
							goto l135
						}
						position++
						if buffer[position] != rune('s') {
							goto l135
						}
						position++
						if buffer[position] != rune('p') {
							goto l135
						}
						position++
						goto l131
					l135:
						position, tokenIndex = position131, tokenIndex131
						if buffer[position] != rune('s') {
							goto l136
						}
						position++
						if buffer[position] != rune('s') {
							goto l136
						}
						position++
						if buffer[position] != rune('p') {
							goto l136
						}
						position++
						goto l131
					l136:
						position, tokenIndex = position131, tokenIndex131
						if buffer[position] != rune('s') {
							goto l137
						}
						position++
						if buffer[position] != rune('p') {
							goto l137
						}
						position++
						goto l131
					l137:
						position, tokenIndex = position131, tokenIndex131
						if buffer[position] != rune('m') {
							goto l138
						}
						position++
						if buffer[position] != rune('o') {
							goto l138
						}
						position++
						if buffer[position] != rune('r') {
							goto l138
						}
						position++
						if buffer[position] != rune('t') {
							goto l138
						}
						position++
						if buffer[position] != rune('h') {
							goto l138
						}
						position++
						goto l131
					l138:
						position, tokenIndex = position131, tokenIndex131
						if buffer[position] != rune('s') {
							goto l139
						}
						position++
						if buffer[position] != rune('u') {
							goto l139
						}
						position++
						if buffer[position] != rune('p') {
							goto l139
						}
						position++
						if buffer[position] != rune('s') {
							goto l139
						}
						position++
						if buffer[position] != rune('p') {
							goto l139
						}
						position++
						goto l131
					l139:
						position, tokenIndex = position131, tokenIndex131
						if buffer[position] != rune('s') {
							goto l130
						}
						position++
						if buffer[position] != rune('u') {
							goto l130
						}
						position++
					}
				l131:
					goto l129
				l130:
					position, tokenIndex = position129, tokenIndex129
					if buffer[position] != rune('n') {
						goto l127
					}
					position++
					if buffer[position] != rune('v') {
						goto l127
					}
					position++
					if buffer[position] != rune('a') {
						goto l127
					}
					position++
					if buffer[position] != rune('r') {
						goto l127
					}
					position++
				}
			l129:
				{
					position140, tokenIndex140 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l141
					}
					position++
					goto l140
				l141:
					position, tokenIndex = position140, tokenIndex140
					{
						position142, tokenIndex142 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l127
						}
						position, tokenIndex = position142, tokenIndex142
					}
				}
			l140:
				add(ruleRankNotho, position128)
			}
			return true
		l127:
			position, tokenIndex = position127, tokenIndex127
			return false
		},
		/* 21 RankOtherUncommon <- <(('*' / ('n' 'a' 't' 'i' 'o') / ('n' 'a' 't' '.') / ('n' 'a' 't') / ('f' '.' 's' 'p') / 'α' / ('β' 'β') / 'β' / 'γ' / 'δ' / 'ε' / 'φ' / 'θ' / 'μ' / ('a' '.') / ('b' '.') / ('c' '.') / ('d' '.') / ('e' '.') / ('g' '.') / ('k' '.') / ('m' 'u' 't' '.')) &SpaceCharEOI)> */
		func() bool {
			position143, tokenIndex143 := position, tokenIndex
			{
				position144 := position
				{
					position145, tokenIndex145 := position, tokenIndex
					if buffer[position] != rune('*') {
						goto l146
					}
					position++
					goto l145
				l146:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('n') {
						goto l147
					}
					position++
					if buffer[position] != rune('a') {
						goto l147
					}
					position++
					if buffer[position] != rune('t') {
						goto l147
					}
					position++
					if buffer[position] != rune('i') {
						goto l147
					}
					position++
					if buffer[position] != rune('o') {
						goto l147
					}
					position++
					goto l145
				l147:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('n') {
						goto l148
					}
					position++
					if buffer[position] != rune('a') {
						goto l148
					}
					position++
					if buffer[position] != rune('t') {
						goto l148
					}
					position++
					if buffer[position] != rune('.') {
						goto l148
					}
					position++
					goto l145
				l148:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('n') {
						goto l149
					}
					position++
					if buffer[position] != rune('a') {
						goto l149
					}
					position++
					if buffer[position] != rune('t') {
						goto l149
					}
					position++
					goto l145
				l149:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('f') {
						goto l150
					}
					position++
					if buffer[position] != rune('.') {
						goto l150
					}
					position++
					if buffer[position] != rune('s') {
						goto l150
					}
					position++
					if buffer[position] != rune('p') {
						goto l150
					}
					position++
					goto l145
				l150:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('α') {
						goto l151
					}
					position++
					goto l145
				l151:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('β') {
						goto l152
					}
					position++
					if buffer[position] != rune('β') {
						goto l152
					}
					position++
					goto l145
				l152:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('β') {
						goto l153
					}
					position++
					goto l145
				l153:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('γ') {
						goto l154
					}
					position++
					goto l145
				l154:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('δ') {
						goto l155
					}
					position++
					goto l145
				l155:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('ε') {
						goto l156
					}
					position++
					goto l145
				l156:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('φ') {
						goto l157
					}
					position++
					goto l145
				l157:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('θ') {
						goto l158
					}
					position++
					goto l145
				l158:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('μ') {
						goto l159
					}
					position++
					goto l145
				l159:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('a') {
						goto l160
					}
					position++
					if buffer[position] != rune('.') {
						goto l160
					}
					position++
					goto l145
				l160:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('b') {
						goto l161
					}
					position++
					if buffer[position] != rune('.') {
						goto l161
					}
					position++
					goto l145
				l161:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('c') {
						goto l162
					}
					position++
					if buffer[position] != rune('.') {
						goto l162
					}
					position++
					goto l145
				l162:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('d') {
						goto l163
					}
					position++
					if buffer[position] != rune('.') {
						goto l163
					}
					position++
					goto l145
				l163:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('e') {
						goto l164
					}
					position++
					if buffer[position] != rune('.') {
						goto l164
					}
					position++
					goto l145
				l164:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('g') {
						goto l165
					}
					position++
					if buffer[position] != rune('.') {
						goto l165
					}
					position++
					goto l145
				l165:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('k') {
						goto l166
					}
					position++
					if buffer[position] != rune('.') {
						goto l166
					}
					position++
					goto l145
				l166:
					position, tokenIndex = position145, tokenIndex145
					if buffer[position] != rune('m') {
						goto l143
					}
					position++
					if buffer[position] != rune('u') {
						goto l143
					}
					position++
					if buffer[position] != rune('t') {
						goto l143
					}
					position++
					if buffer[position] != rune('.') {
						goto l143
					}
					position++
				}
			l145:
				{
					position167, tokenIndex167 := position, tokenIndex
					if !_rules[ruleSpaceCharEOI]() {
						goto l143
					}
					position, tokenIndex = position167, tokenIndex167
				}
				add(ruleRankOtherUncommon, position144)
			}
			return true
		l143:
			position, tokenIndex = position143, tokenIndex143
			return false
		},
		/* 22 RankOther <- <((('m' 'o' 'r' 'p' 'h') / ('c' 'o' 'n' 'v' 'a' 'r') / ('p' 's' 'e' 'u' 'd' 'o' 'v' 'a' 'r') / ('s' 'e' 'c' 't') / ('s' 'e' 'r') / ('s' 'u' 'b' 'v' 'a' 'r') / ('s' 'u' 'b' 'f') / ('r' 'a' 'c' 'e') / ('p' 'v') / ('p' 'a' 't' 'h' 'o' 'v' 'a' 'r') / ('a' 'b' '.' (_? ('n' '.'))?) / ('s' 't')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position168, tokenIndex168 := position, tokenIndex
			{
				position169 := position
				{
					position170, tokenIndex170 := position, tokenIndex
					if buffer[position] != rune('m') {
						goto l171
					}
					position++
					if buffer[position] != rune('o') {
						goto l171
					}
					position++
					if buffer[position] != rune('r') {
						goto l171
					}
					position++
					if buffer[position] != rune('p') {
						goto l171
					}
					position++
					if buffer[position] != rune('h') {
						goto l171
					}
					position++
					goto l170
				l171:
					position, tokenIndex = position170, tokenIndex170
					if buffer[position] != rune('c') {
						goto l172
					}
					position++
					if buffer[position] != rune('o') {
						goto l172
					}
					position++
					if buffer[position] != rune('n') {
						goto l172
					}
					position++
					if buffer[position] != rune('v') {
						goto l172
					}
					position++
					if buffer[position] != rune('a') {
						goto l172
					}
					position++
					if buffer[position] != rune('r') {
						goto l172
					}
					position++
					goto l170
				l172:
					position, tokenIndex = position170, tokenIndex170
					if buffer[position] != rune('p') {
						goto l173
					}
					position++
					if buffer[position] != rune('s') {
						goto l173
					}
					position++
					if buffer[position] != rune('e') {
						goto l173
					}
					position++
					if buffer[position] != rune('u') {
						goto l173
					}
					position++
					if buffer[position] != rune('d') {
						goto l173
					}
					position++
					if buffer[position] != rune('o') {
						goto l173
					}
					position++
					if buffer[position] != rune('v') {
						goto l173
					}
					position++
					if buffer[position] != rune('a') {
						goto l173
					}
					position++
					if buffer[position] != rune('r') {
						goto l173
					}
					position++
					goto l170
				l173:
					position, tokenIndex = position170, tokenIndex170
					if buffer[position] != rune('s') {
						goto l174
					}
					position++
					if buffer[position] != rune('e') {
						goto l174
					}
					position++
					if buffer[position] != rune('c') {
						goto l174
					}
					position++
					if buffer[position] != rune('t') {
						goto l174
					}
					position++
					goto l170
				l174:
					position, tokenIndex = position170, tokenIndex170
					if buffer[position] != rune('s') {
						goto l175
					}
					position++
					if buffer[position] != rune('e') {
						goto l175
					}
					position++
					if buffer[position] != rune('r') {
						goto l175
					}
					position++
					goto l170
				l175:
					position, tokenIndex = position170, tokenIndex170
					if buffer[position] != rune('s') {
						goto l176
					}
					position++
					if buffer[position] != rune('u') {
						goto l176
					}
					position++
					if buffer[position] != rune('b') {
						goto l176
					}
					position++
					if buffer[position] != rune('v') {
						goto l176
					}
					position++
					if buffer[position] != rune('a') {
						goto l176
					}
					position++
					if buffer[position] != rune('r') {
						goto l176
					}
					position++
					goto l170
				l176:
					position, tokenIndex = position170, tokenIndex170
					if buffer[position] != rune('s') {
						goto l177
					}
					position++
					if buffer[position] != rune('u') {
						goto l177
					}
					position++
					if buffer[position] != rune('b') {
						goto l177
					}
					position++
					if buffer[position] != rune('f') {
						goto l177
					}
					position++
					goto l170
				l177:
					position, tokenIndex = position170, tokenIndex170
					if buffer[position] != rune('r') {
						goto l178
					}
					position++
					if buffer[position] != rune('a') {
						goto l178
					}
					position++
					if buffer[position] != rune('c') {
						goto l178
					}
					position++
					if buffer[position] != rune('e') {
						goto l178
					}
					position++
					goto l170
				l178:
					position, tokenIndex = position170, tokenIndex170
					if buffer[position] != rune('p') {
						goto l179
					}
					position++
					if buffer[position] != rune('v') {
						goto l179
					}
					position++
					goto l170
				l179:
					position, tokenIndex = position170, tokenIndex170
					if buffer[position] != rune('p') {
						goto l180
					}
					position++
					if buffer[position] != rune('a') {
						goto l180
					}
					position++
					if buffer[position] != rune('t') {
						goto l180
					}
					position++
					if buffer[position] != rune('h') {
						goto l180
					}
					position++
					if buffer[position] != rune('o') {
						goto l180
					}
					position++
					if buffer[position] != rune('v') {
						goto l180
					}
					position++
					if buffer[position] != rune('a') {
						goto l180
					}
					position++
					if buffer[position] != rune('r') {
						goto l180
					}
					position++
					goto l170
				l180:
					position, tokenIndex = position170, tokenIndex170
					if buffer[position] != rune('a') {
						goto l181
					}
					position++
					if buffer[position] != rune('b') {
						goto l181
					}
					position++
					if buffer[position] != rune('.') {
						goto l181
					}
					position++
					{
						position182, tokenIndex182 := position, tokenIndex
						{
							position184, tokenIndex184 := position, tokenIndex
							if !_rules[rule_]() {
								goto l184
							}
							goto l185
						l184:
							position, tokenIndex = position184, tokenIndex184
						}
					l185:
						if buffer[position] != rune('n') {
							goto l182
						}
						position++
						if buffer[position] != rune('.') {
							goto l182
						}
						position++
						goto l183
					l182:
						position, tokenIndex = position182, tokenIndex182
					}
				l183:
					goto l170
				l181:
					position, tokenIndex = position170, tokenIndex170
					if buffer[position] != rune('s') {
						goto l168
					}
					position++
					if buffer[position] != rune('t') {
						goto l168
					}
					position++
				}
			l170:
				{
					position186, tokenIndex186 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l187
					}
					position++
					goto l186
				l187:
					position, tokenIndex = position186, tokenIndex186
					{
						position188, tokenIndex188 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l168
						}
						position, tokenIndex = position188, tokenIndex188
					}
				}
			l186:
				add(ruleRankOther, position169)
			}
			return true
		l168:
			position, tokenIndex = position168, tokenIndex168
			return false
		},
		/* 23 RankVar <- <((('v' 'a' 'r' 'i' 'e' 't' 'y') / ('[' 'v' 'a' 'r' '.' ']') / ('v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position189, tokenIndex189 := position, tokenIndex
			{
				position190 := position
				{
					position191, tokenIndex191 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l192
					}
					position++
					if buffer[position] != rune('a') {
						goto l192
					}
					position++
					if buffer[position] != rune('r') {
						goto l192
					}
					position++
					if buffer[position] != rune('i') {
						goto l192
					}
					position++
					if buffer[position] != rune('e') {
						goto l192
					}
					position++
					if buffer[position] != rune('t') {
						goto l192
					}
					position++
					if buffer[position] != rune('y') {
						goto l192
					}
					position++
					goto l191
				l192:
					position, tokenIndex = position191, tokenIndex191
					if buffer[position] != rune('[') {
						goto l193
					}
					position++
					if buffer[position] != rune('v') {
						goto l193
					}
					position++
					if buffer[position] != rune('a') {
						goto l193
					}
					position++
					if buffer[position] != rune('r') {
						goto l193
					}
					position++
					if buffer[position] != rune('.') {
						goto l193
					}
					position++
					if buffer[position] != rune(']') {
						goto l193
					}
					position++
					goto l191
				l193:
					position, tokenIndex = position191, tokenIndex191
					if buffer[position] != rune('v') {
						goto l189
					}
					position++
					if buffer[position] != rune('a') {
						goto l189
					}
					position++
					if buffer[position] != rune('r') {
						goto l189
					}
					position++
				}
			l191:
				{
					position194, tokenIndex194 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l195
					}
					position++
					goto l194
				l195:
					position, tokenIndex = position194, tokenIndex194
					{
						position196, tokenIndex196 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l189
						}
						position, tokenIndex = position196, tokenIndex196
					}
				}
			l194:
				add(ruleRankVar, position190)
			}
			return true
		l189:
			position, tokenIndex = position189, tokenIndex189
			return false
		},
		/* 24 RankForma <- <((('f' 'o' 'r' 'm' 'a') / ('f' 'm' 'a') / ('f' 'o' 'r' 'm') / ('f' 'o') / 'f') ('.' / &SpaceCharEOI))> */
		func() bool {
			position197, tokenIndex197 := position, tokenIndex
			{
				position198 := position
				{
					position199, tokenIndex199 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l200
					}
					position++
					if buffer[position] != rune('o') {
						goto l200
					}
					position++
					if buffer[position] != rune('r') {
						goto l200
					}
					position++
					if buffer[position] != rune('m') {
						goto l200
					}
					position++
					if buffer[position] != rune('a') {
						goto l200
					}
					position++
					goto l199
				l200:
					position, tokenIndex = position199, tokenIndex199
					if buffer[position] != rune('f') {
						goto l201
					}
					position++
					if buffer[position] != rune('m') {
						goto l201
					}
					position++
					if buffer[position] != rune('a') {
						goto l201
					}
					position++
					goto l199
				l201:
					position, tokenIndex = position199, tokenIndex199
					if buffer[position] != rune('f') {
						goto l202
					}
					position++
					if buffer[position] != rune('o') {
						goto l202
					}
					position++
					if buffer[position] != rune('r') {
						goto l202
					}
					position++
					if buffer[position] != rune('m') {
						goto l202
					}
					position++
					goto l199
				l202:
					position, tokenIndex = position199, tokenIndex199
					if buffer[position] != rune('f') {
						goto l203
					}
					position++
					if buffer[position] != rune('o') {
						goto l203
					}
					position++
					goto l199
				l203:
					position, tokenIndex = position199, tokenIndex199
					if buffer[position] != rune('f') {
						goto l197
					}
					position++
				}
			l199:
				{
					position204, tokenIndex204 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l205
					}
					position++
					goto l204
				l205:
					position, tokenIndex = position204, tokenIndex204
					{
						position206, tokenIndex206 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l197
						}
						position, tokenIndex = position206, tokenIndex206
					}
				}
			l204:
				add(ruleRankForma, position198)
			}
			return true
		l197:
			position, tokenIndex = position197, tokenIndex197
			return false
		},
		/* 25 RankSsp <- <((('s' 's' 'p') / ('s' 'u' 'b' 's' 'p' 'e' 'c') / ('s' 'u' 'b' 's' 'p')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position207, tokenIndex207 := position, tokenIndex
			{
				position208 := position
				{
					position209, tokenIndex209 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l210
					}
					position++
					if buffer[position] != rune('s') {
						goto l210
					}
					position++
					if buffer[position] != rune('p') {
						goto l210
					}
					position++
					goto l209
				l210:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('s') {
						goto l211
					}
					position++
					if buffer[position] != rune('u') {
						goto l211
					}
					position++
					if buffer[position] != rune('b') {
						goto l211
					}
					position++
					if buffer[position] != rune('s') {
						goto l211
					}
					position++
					if buffer[position] != rune('p') {
						goto l211
					}
					position++
					if buffer[position] != rune('e') {
						goto l211
					}
					position++
					if buffer[position] != rune('c') {
						goto l211
					}
					position++
					goto l209
				l211:
					position, tokenIndex = position209, tokenIndex209
					if buffer[position] != rune('s') {
						goto l207
					}
					position++
					if buffer[position] != rune('u') {
						goto l207
					}
					position++
					if buffer[position] != rune('b') {
						goto l207
					}
					position++
					if buffer[position] != rune('s') {
						goto l207
					}
					position++
					if buffer[position] != rune('p') {
						goto l207
					}
					position++
				}
			l209:
				{
					position212, tokenIndex212 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l213
					}
					position++
					goto l212
				l213:
					position, tokenIndex = position212, tokenIndex212
					{
						position214, tokenIndex214 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l207
						}
						position, tokenIndex = position214, tokenIndex214
					}
				}
			l212:
				add(ruleRankSsp, position208)
			}
			return true
		l207:
			position, tokenIndex = position207, tokenIndex207
			return false
		},
		/* 26 RankAgamo <- <((('a' 'g' 'a' 'm' 'o' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 's' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position215, tokenIndex215 := position, tokenIndex
			{
				position216 := position
				{
					position217, tokenIndex217 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l218
					}
					position++
					if buffer[position] != rune('g') {
						goto l218
					}
					position++
					if buffer[position] != rune('a') {
						goto l218
					}
					position++
					if buffer[position] != rune('m') {
						goto l218
					}
					position++
					if buffer[position] != rune('o') {
						goto l218
					}
					position++
					if buffer[position] != rune('s') {
						goto l218
					}
					position++
					if buffer[position] != rune('p') {
						goto l218
					}
					position++
					goto l217
				l218:
					position, tokenIndex = position217, tokenIndex217
					if buffer[position] != rune('a') {
						goto l219
					}
					position++
					if buffer[position] != rune('g') {
						goto l219
					}
					position++
					if buffer[position] != rune('a') {
						goto l219
					}
					position++
					if buffer[position] != rune('m') {
						goto l219
					}
					position++
					if buffer[position] != rune('o') {
						goto l219
					}
					position++
					if buffer[position] != rune('s') {
						goto l219
					}
					position++
					if buffer[position] != rune('s') {
						goto l219
					}
					position++
					if buffer[position] != rune('p') {
						goto l219
					}
					position++
					goto l217
				l219:
					position, tokenIndex = position217, tokenIndex217
					if buffer[position] != rune('a') {
						goto l215
					}
					position++
					if buffer[position] != rune('g') {
						goto l215
					}
					position++
					if buffer[position] != rune('a') {
						goto l215
					}
					position++
					if buffer[position] != rune('m') {
						goto l215
					}
					position++
					if buffer[position] != rune('o') {
						goto l215
					}
					position++
					if buffer[position] != rune('v') {
						goto l215
					}
					position++
					if buffer[position] != rune('a') {
						goto l215
					}
					position++
					if buffer[position] != rune('r') {
						goto l215
					}
					position++
				}
			l217:
				{
					position220, tokenIndex220 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l221
					}
					position++
					goto l220
				l221:
					position, tokenIndex = position220, tokenIndex220
					{
						position222, tokenIndex222 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l215
						}
						position, tokenIndex = position222, tokenIndex222
					}
				}
			l220:
				add(ruleRankAgamo, position216)
			}
			return true
		l215:
			position, tokenIndex = position215, tokenIndex215
			return false
		},
		/* 27 SubgenusOrSuperspecies <- <('(' _? NameLowerChar+ _? ')')> */
		func() bool {
			position223, tokenIndex223 := position, tokenIndex
			{
				position224 := position
				if buffer[position] != rune('(') {
					goto l223
				}
				position++
				{
					position225, tokenIndex225 := position, tokenIndex
					if !_rules[rule_]() {
						goto l225
					}
					goto l226
				l225:
					position, tokenIndex = position225, tokenIndex225
				}
			l226:
				if !_rules[ruleNameLowerChar]() {
					goto l223
				}
			l227:
				{
					position228, tokenIndex228 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l228
					}
					goto l227
				l228:
					position, tokenIndex = position228, tokenIndex228
				}
				{
					position229, tokenIndex229 := position, tokenIndex
					if !_rules[rule_]() {
						goto l229
					}
					goto l230
				l229:
					position, tokenIndex = position229, tokenIndex229
				}
			l230:
				if buffer[position] != rune(')') {
					goto l223
				}
				position++
				add(ruleSubgenusOrSuperspecies, position224)
			}
			return true
		l223:
			position, tokenIndex = position223, tokenIndex223
			return false
		},
		/* 28 Subgenus <- <(Subgenus2 / Subgenus1)> */
		func() bool {
			position231, tokenIndex231 := position, tokenIndex
			{
				position232 := position
				{
					position233, tokenIndex233 := position, tokenIndex
					if !_rules[ruleSubgenus2]() {
						goto l234
					}
					goto l233
				l234:
					position, tokenIndex = position233, tokenIndex233
					if !_rules[ruleSubgenus1]() {
						goto l231
					}
				}
			l233:
				add(ruleSubgenus, position232)
			}
			return true
		l231:
			position, tokenIndex = position231, tokenIndex231
			return false
		},
		/* 29 Subgenus2 <- <('(' _? AbbrSubgenus _? ')' !(_? NameUpperChar))> */
		func() bool {
			position235, tokenIndex235 := position, tokenIndex
			{
				position236 := position
				if buffer[position] != rune('(') {
					goto l235
				}
				position++
				{
					position237, tokenIndex237 := position, tokenIndex
					if !_rules[rule_]() {
						goto l237
					}
					goto l238
				l237:
					position, tokenIndex = position237, tokenIndex237
				}
			l238:
				if !_rules[ruleAbbrSubgenus]() {
					goto l235
				}
				{
					position239, tokenIndex239 := position, tokenIndex
					if !_rules[rule_]() {
						goto l239
					}
					goto l240
				l239:
					position, tokenIndex = position239, tokenIndex239
				}
			l240:
				if buffer[position] != rune(')') {
					goto l235
				}
				position++
				{
					position241, tokenIndex241 := position, tokenIndex
					{
						position242, tokenIndex242 := position, tokenIndex
						if !_rules[rule_]() {
							goto l242
						}
						goto l243
					l242:
						position, tokenIndex = position242, tokenIndex242
					}
				l243:
					if !_rules[ruleNameUpperChar]() {
						goto l241
					}
					goto l235
				l241:
					position, tokenIndex = position241, tokenIndex241
				}
				add(ruleSubgenus2, position236)
			}
			return true
		l235:
			position, tokenIndex = position235, tokenIndex235
			return false
		},
		/* 30 Subgenus1 <- <('(' _? UninomialWord _? ')')> */
		func() bool {
			position244, tokenIndex244 := position, tokenIndex
			{
				position245 := position
				if buffer[position] != rune('(') {
					goto l244
				}
				position++
				{
					position246, tokenIndex246 := position, tokenIndex
					if !_rules[rule_]() {
						goto l246
					}
					goto l247
				l246:
					position, tokenIndex = position246, tokenIndex246
				}
			l247:
				if !_rules[ruleUninomialWord]() {
					goto l244
				}
				{
					position248, tokenIndex248 := position, tokenIndex
					if !_rules[rule_]() {
						goto l248
					}
					goto l249
				l248:
					position, tokenIndex = position248, tokenIndex248
				}
			l249:
				if buffer[position] != rune(')') {
					goto l244
				}
				position++
				add(ruleSubgenus1, position245)
			}
			return true
		l244:
			position, tokenIndex = position244, tokenIndex244
			return false
		},
		/* 31 UninomialCombo <- <(UninomialCombo1 / UninomialCombo2)> */
		func() bool {
			position250, tokenIndex250 := position, tokenIndex
			{
				position251 := position
				{
					position252, tokenIndex252 := position, tokenIndex
					if !_rules[ruleUninomialCombo1]() {
						goto l253
					}
					goto l252
				l253:
					position, tokenIndex = position252, tokenIndex252
					if !_rules[ruleUninomialCombo2]() {
						goto l250
					}
				}
			l252:
				add(ruleUninomialCombo, position251)
			}
			return true
		l250:
			position, tokenIndex = position250, tokenIndex250
			return false
		},
		/* 32 UninomialCombo1 <- <(UninomialWord _? Subgenus (_? Authorship)?)> */
		func() bool {
			position254, tokenIndex254 := position, tokenIndex
			{
				position255 := position
				if !_rules[ruleUninomialWord]() {
					goto l254
				}
				{
					position256, tokenIndex256 := position, tokenIndex
					if !_rules[rule_]() {
						goto l256
					}
					goto l257
				l256:
					position, tokenIndex = position256, tokenIndex256
				}
			l257:
				if !_rules[ruleSubgenus]() {
					goto l254
				}
				{
					position258, tokenIndex258 := position, tokenIndex
					{
						position260, tokenIndex260 := position, tokenIndex
						if !_rules[rule_]() {
							goto l260
						}
						goto l261
					l260:
						position, tokenIndex = position260, tokenIndex260
					}
				l261:
					if !_rules[ruleAuthorship]() {
						goto l258
					}
					goto l259
				l258:
					position, tokenIndex = position258, tokenIndex258
				}
			l259:
				add(ruleUninomialCombo1, position255)
			}
			return true
		l254:
			position, tokenIndex = position254, tokenIndex254
			return false
		},
		/* 33 UninomialCombo2 <- <(Uninomial _ RankUninomial _ Uninomial)> */
		func() bool {
			position262, tokenIndex262 := position, tokenIndex
			{
				position263 := position
				if !_rules[ruleUninomial]() {
					goto l262
				}
				if !_rules[rule_]() {
					goto l262
				}
				if !_rules[ruleRankUninomial]() {
					goto l262
				}
				if !_rules[rule_]() {
					goto l262
				}
				if !_rules[ruleUninomial]() {
					goto l262
				}
				add(ruleUninomialCombo2, position263)
			}
			return true
		l262:
			position, tokenIndex = position262, tokenIndex262
			return false
		},
		/* 34 RankUninomial <- <(RankUninomialPlain / RankUninomialNotho)> */
		func() bool {
			position264, tokenIndex264 := position, tokenIndex
			{
				position265 := position
				{
					position266, tokenIndex266 := position, tokenIndex
					if !_rules[ruleRankUninomialPlain]() {
						goto l267
					}
					goto l266
				l267:
					position, tokenIndex = position266, tokenIndex266
					if !_rules[ruleRankUninomialNotho]() {
						goto l264
					}
				}
			l266:
				add(ruleRankUninomial, position265)
			}
			return true
		l264:
			position, tokenIndex = position264, tokenIndex264
			return false
		},
		/* 35 RankUninomialPlain <- <((('s' 'e' 'c' 't') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('t' 'r' 'i' 'b') / ('s' 'u' 'b' 't' 'r' 'i' 'b') / ('s' 'u' 'b' 's' 'e' 'r') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('f' 'a' 'm') / ('s' 'u' 'b' 'f' 'a' 'm') / ('s' 'u' 'p' 'e' 'r' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position268, tokenIndex268 := position, tokenIndex
			{
				position269 := position
				{
					position270, tokenIndex270 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l271
					}
					position++
					if buffer[position] != rune('e') {
						goto l271
					}
					position++
					if buffer[position] != rune('c') {
						goto l271
					}
					position++
					if buffer[position] != rune('t') {
						goto l271
					}
					position++
					goto l270
				l271:
					position, tokenIndex = position270, tokenIndex270
					if buffer[position] != rune('s') {
						goto l272
					}
					position++
					if buffer[position] != rune('u') {
						goto l272
					}
					position++
					if buffer[position] != rune('b') {
						goto l272
					}
					position++
					if buffer[position] != rune('s') {
						goto l272
					}
					position++
					if buffer[position] != rune('e') {
						goto l272
					}
					position++
					if buffer[position] != rune('c') {
						goto l272
					}
					position++
					if buffer[position] != rune('t') {
						goto l272
					}
					position++
					goto l270
				l272:
					position, tokenIndex = position270, tokenIndex270
					if buffer[position] != rune('t') {
						goto l273
					}
					position++
					if buffer[position] != rune('r') {
						goto l273
					}
					position++
					if buffer[position] != rune('i') {
						goto l273
					}
					position++
					if buffer[position] != rune('b') {
						goto l273
					}
					position++
					goto l270
				l273:
					position, tokenIndex = position270, tokenIndex270
					if buffer[position] != rune('s') {
						goto l274
					}
					position++
					if buffer[position] != rune('u') {
						goto l274
					}
					position++
					if buffer[position] != rune('b') {
						goto l274
					}
					position++
					if buffer[position] != rune('t') {
						goto l274
					}
					position++
					if buffer[position] != rune('r') {
						goto l274
					}
					position++
					if buffer[position] != rune('i') {
						goto l274
					}
					position++
					if buffer[position] != rune('b') {
						goto l274
					}
					position++
					goto l270
				l274:
					position, tokenIndex = position270, tokenIndex270
					if buffer[position] != rune('s') {
						goto l275
					}
					position++
					if buffer[position] != rune('u') {
						goto l275
					}
					position++
					if buffer[position] != rune('b') {
						goto l275
					}
					position++
					if buffer[position] != rune('s') {
						goto l275
					}
					position++
					if buffer[position] != rune('e') {
						goto l275
					}
					position++
					if buffer[position] != rune('r') {
						goto l275
					}
					position++
					goto l270
				l275:
					position, tokenIndex = position270, tokenIndex270
					if buffer[position] != rune('s') {
						goto l276
					}
					position++
					if buffer[position] != rune('e') {
						goto l276
					}
					position++
					if buffer[position] != rune('r') {
						goto l276
					}
					position++
					goto l270
				l276:
					position, tokenIndex = position270, tokenIndex270
					if buffer[position] != rune('s') {
						goto l277
					}
					position++
					if buffer[position] != rune('u') {
						goto l277
					}
					position++
					if buffer[position] != rune('b') {
						goto l277
					}
					position++
					if buffer[position] != rune('g') {
						goto l277
					}
					position++
					if buffer[position] != rune('e') {
						goto l277
					}
					position++
					if buffer[position] != rune('n') {
						goto l277
					}
					position++
					goto l270
				l277:
					position, tokenIndex = position270, tokenIndex270
					if buffer[position] != rune('s') {
						goto l278
					}
					position++
					if buffer[position] != rune('u') {
						goto l278
					}
					position++
					if buffer[position] != rune('b') {
						goto l278
					}
					position++
					if buffer[position] != rune('g') {
						goto l278
					}
					position++
					goto l270
				l278:
					position, tokenIndex = position270, tokenIndex270
					if buffer[position] != rune('f') {
						goto l279
					}
					position++
					if buffer[position] != rune('a') {
						goto l279
					}
					position++
					if buffer[position] != rune('m') {
						goto l279
					}
					position++
					goto l270
				l279:
					position, tokenIndex = position270, tokenIndex270
					if buffer[position] != rune('s') {
						goto l280
					}
					position++
					if buffer[position] != rune('u') {
						goto l280
					}
					position++
					if buffer[position] != rune('b') {
						goto l280
					}
					position++
					if buffer[position] != rune('f') {
						goto l280
					}
					position++
					if buffer[position] != rune('a') {
						goto l280
					}
					position++
					if buffer[position] != rune('m') {
						goto l280
					}
					position++
					goto l270
				l280:
					position, tokenIndex = position270, tokenIndex270
					if buffer[position] != rune('s') {
						goto l268
					}
					position++
					if buffer[position] != rune('u') {
						goto l268
					}
					position++
					if buffer[position] != rune('p') {
						goto l268
					}
					position++
					if buffer[position] != rune('e') {
						goto l268
					}
					position++
					if buffer[position] != rune('r') {
						goto l268
					}
					position++
					if buffer[position] != rune('t') {
						goto l268
					}
					position++
					if buffer[position] != rune('r') {
						goto l268
					}
					position++
					if buffer[position] != rune('i') {
						goto l268
					}
					position++
					if buffer[position] != rune('b') {
						goto l268
					}
					position++
				}
			l270:
				{
					position281, tokenIndex281 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l282
					}
					position++
					goto l281
				l282:
					position, tokenIndex = position281, tokenIndex281
					{
						position283, tokenIndex283 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l268
						}
						position, tokenIndex = position283, tokenIndex283
					}
				}
			l281:
				add(ruleRankUninomialPlain, position269)
			}
			return true
		l268:
			position, tokenIndex = position268, tokenIndex268
			return false
		},
		/* 36 RankUninomialNotho <- <('n' 'o' 't' 'h' 'o' _? (('s' 'e' 'c' 't') / ('g' 'e' 'n') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'e' 'n') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('s' 'u' 'b' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position284, tokenIndex284 := position, tokenIndex
			{
				position285 := position
				if buffer[position] != rune('n') {
					goto l284
				}
				position++
				if buffer[position] != rune('o') {
					goto l284
				}
				position++
				if buffer[position] != rune('t') {
					goto l284
				}
				position++
				if buffer[position] != rune('h') {
					goto l284
				}
				position++
				if buffer[position] != rune('o') {
					goto l284
				}
				position++
				{
					position286, tokenIndex286 := position, tokenIndex
					if !_rules[rule_]() {
						goto l286
					}
					goto l287
				l286:
					position, tokenIndex = position286, tokenIndex286
				}
			l287:
				{
					position288, tokenIndex288 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l289
					}
					position++
					if buffer[position] != rune('e') {
						goto l289
					}
					position++
					if buffer[position] != rune('c') {
						goto l289
					}
					position++
					if buffer[position] != rune('t') {
						goto l289
					}
					position++
					goto l288
				l289:
					position, tokenIndex = position288, tokenIndex288
					if buffer[position] != rune('g') {
						goto l290
					}
					position++
					if buffer[position] != rune('e') {
						goto l290
					}
					position++
					if buffer[position] != rune('n') {
						goto l290
					}
					position++
					goto l288
				l290:
					position, tokenIndex = position288, tokenIndex288
					if buffer[position] != rune('s') {
						goto l291
					}
					position++
					if buffer[position] != rune('e') {
						goto l291
					}
					position++
					if buffer[position] != rune('r') {
						goto l291
					}
					position++
					goto l288
				l291:
					position, tokenIndex = position288, tokenIndex288
					if buffer[position] != rune('s') {
						goto l292
					}
					position++
					if buffer[position] != rune('u') {
						goto l292
					}
					position++
					if buffer[position] != rune('b') {
						goto l292
					}
					position++
					if buffer[position] != rune('g') {
						goto l292
					}
					position++
					if buffer[position] != rune('e') {
						goto l292
					}
					position++
					if buffer[position] != rune('e') {
						goto l292
					}
					position++
					if buffer[position] != rune('n') {
						goto l292
					}
					position++
					goto l288
				l292:
					position, tokenIndex = position288, tokenIndex288
					if buffer[position] != rune('s') {
						goto l293
					}
					position++
					if buffer[position] != rune('u') {
						goto l293
					}
					position++
					if buffer[position] != rune('b') {
						goto l293
					}
					position++
					if buffer[position] != rune('g') {
						goto l293
					}
					position++
					if buffer[position] != rune('e') {
						goto l293
					}
					position++
					if buffer[position] != rune('n') {
						goto l293
					}
					position++
					goto l288
				l293:
					position, tokenIndex = position288, tokenIndex288
					if buffer[position] != rune('s') {
						goto l294
					}
					position++
					if buffer[position] != rune('u') {
						goto l294
					}
					position++
					if buffer[position] != rune('b') {
						goto l294
					}
					position++
					if buffer[position] != rune('g') {
						goto l294
					}
					position++
					goto l288
				l294:
					position, tokenIndex = position288, tokenIndex288
					if buffer[position] != rune('s') {
						goto l295
					}
					position++
					if buffer[position] != rune('u') {
						goto l295
					}
					position++
					if buffer[position] != rune('b') {
						goto l295
					}
					position++
					if buffer[position] != rune('s') {
						goto l295
					}
					position++
					if buffer[position] != rune('e') {
						goto l295
					}
					position++
					if buffer[position] != rune('c') {
						goto l295
					}
					position++
					if buffer[position] != rune('t') {
						goto l295
					}
					position++
					goto l288
				l295:
					position, tokenIndex = position288, tokenIndex288
					if buffer[position] != rune('s') {
						goto l284
					}
					position++
					if buffer[position] != rune('u') {
						goto l284
					}
					position++
					if buffer[position] != rune('b') {
						goto l284
					}
					position++
					if buffer[position] != rune('t') {
						goto l284
					}
					position++
					if buffer[position] != rune('r') {
						goto l284
					}
					position++
					if buffer[position] != rune('i') {
						goto l284
					}
					position++
					if buffer[position] != rune('b') {
						goto l284
					}
					position++
				}
			l288:
				{
					position296, tokenIndex296 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l297
					}
					position++
					goto l296
				l297:
					position, tokenIndex = position296, tokenIndex296
					{
						position298, tokenIndex298 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l284
						}
						position, tokenIndex = position298, tokenIndex298
					}
				}
			l296:
				add(ruleRankUninomialNotho, position285)
			}
			return true
		l284:
			position, tokenIndex = position284, tokenIndex284
			return false
		},
		/* 37 Uninomial <- <(UninomialWord (_ Authorship !(_ LowerCharExtended LowerCharExtended LowerCharExtended))?)> */
		func() bool {
			position299, tokenIndex299 := position, tokenIndex
			{
				position300 := position
				if !_rules[ruleUninomialWord]() {
					goto l299
				}
				{
					position301, tokenIndex301 := position, tokenIndex
					if !_rules[rule_]() {
						goto l301
					}
					if !_rules[ruleAuthorship]() {
						goto l301
					}
					{
						position303, tokenIndex303 := position, tokenIndex
						if !_rules[rule_]() {
							goto l303
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l303
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l303
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l303
						}
						goto l301
					l303:
						position, tokenIndex = position303, tokenIndex303
					}
					goto l302
				l301:
					position, tokenIndex = position301, tokenIndex301
				}
			l302:
				add(ruleUninomial, position300)
			}
			return true
		l299:
			position, tokenIndex = position299, tokenIndex299
			return false
		},
		/* 38 UninomialWord <- <(CapWord / TwoLetterGenus)> */
		func() bool {
			position304, tokenIndex304 := position, tokenIndex
			{
				position305 := position
				{
					position306, tokenIndex306 := position, tokenIndex
					if !_rules[ruleCapWord]() {
						goto l307
					}
					goto l306
				l307:
					position, tokenIndex = position306, tokenIndex306
					if !_rules[ruleTwoLetterGenus]() {
						goto l304
					}
				}
			l306:
				add(ruleUninomialWord, position305)
			}
			return true
		l304:
			position, tokenIndex = position304, tokenIndex304
			return false
		},
		/* 39 AbbrSubgenus <- <(UpperChar LowerChar* '.')> */
		func() bool {
			position308, tokenIndex308 := position, tokenIndex
			{
				position309 := position
				if !_rules[ruleUpperChar]() {
					goto l308
				}
			l310:
				{
					position311, tokenIndex311 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l311
					}
					goto l310
				l311:
					position, tokenIndex = position311, tokenIndex311
				}
				if buffer[position] != rune('.') {
					goto l308
				}
				position++
				add(ruleAbbrSubgenus, position309)
			}
			return true
		l308:
			position, tokenIndex = position308, tokenIndex308
			return false
		},
		/* 40 AbbrGenus <- <(UpperChar LowerChar? '.')> */
		func() bool {
			position312, tokenIndex312 := position, tokenIndex
			{
				position313 := position
				if !_rules[ruleUpperChar]() {
					goto l312
				}
				{
					position314, tokenIndex314 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l314
					}
					goto l315
				l314:
					position, tokenIndex = position314, tokenIndex314
				}
			l315:
				if buffer[position] != rune('.') {
					goto l312
				}
				position++
				add(ruleAbbrGenus, position313)
			}
			return true
		l312:
			position, tokenIndex = position312, tokenIndex312
			return false
		},
		/* 41 CapWord <- <(CapWordWithDash / CapWord1)> */
		func() bool {
			position316, tokenIndex316 := position, tokenIndex
			{
				position317 := position
				{
					position318, tokenIndex318 := position, tokenIndex
					if !_rules[ruleCapWordWithDash]() {
						goto l319
					}
					goto l318
				l319:
					position, tokenIndex = position318, tokenIndex318
					if !_rules[ruleCapWord1]() {
						goto l316
					}
				}
			l318:
				add(ruleCapWord, position317)
			}
			return true
		l316:
			position, tokenIndex = position316, tokenIndex316
			return false
		},
		/* 42 CapWord1 <- <(NameUpperChar NameLowerChar NameLowerChar+ '?'?)> */
		func() bool {
			position320, tokenIndex320 := position, tokenIndex
			{
				position321 := position
				if !_rules[ruleNameUpperChar]() {
					goto l320
				}
				if !_rules[ruleNameLowerChar]() {
					goto l320
				}
				if !_rules[ruleNameLowerChar]() {
					goto l320
				}
			l322:
				{
					position323, tokenIndex323 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l323
					}
					goto l322
				l323:
					position, tokenIndex = position323, tokenIndex323
				}
				{
					position324, tokenIndex324 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l324
					}
					position++
					goto l325
				l324:
					position, tokenIndex = position324, tokenIndex324
				}
			l325:
				add(ruleCapWord1, position321)
			}
			return true
		l320:
			position, tokenIndex = position320, tokenIndex320
			return false
		},
		/* 43 CapWordWithDash <- <(CapWord1 Dash (UpperAfterDash / LowerAfterDash))> */
		func() bool {
			position326, tokenIndex326 := position, tokenIndex
			{
				position327 := position
				if !_rules[ruleCapWord1]() {
					goto l326
				}
				if !_rules[ruleDash]() {
					goto l326
				}
				{
					position328, tokenIndex328 := position, tokenIndex
					if !_rules[ruleUpperAfterDash]() {
						goto l329
					}
					goto l328
				l329:
					position, tokenIndex = position328, tokenIndex328
					if !_rules[ruleLowerAfterDash]() {
						goto l326
					}
				}
			l328:
				add(ruleCapWordWithDash, position327)
			}
			return true
		l326:
			position, tokenIndex = position326, tokenIndex326
			return false
		},
		/* 44 UpperAfterDash <- <CapWord1> */
		func() bool {
			position330, tokenIndex330 := position, tokenIndex
			{
				position331 := position
				if !_rules[ruleCapWord1]() {
					goto l330
				}
				add(ruleUpperAfterDash, position331)
			}
			return true
		l330:
			position, tokenIndex = position330, tokenIndex330
			return false
		},
		/* 45 LowerAfterDash <- <Word1> */
		func() bool {
			position332, tokenIndex332 := position, tokenIndex
			{
				position333 := position
				if !_rules[ruleWord1]() {
					goto l332
				}
				add(ruleLowerAfterDash, position333)
			}
			return true
		l332:
			position, tokenIndex = position332, tokenIndex332
			return false
		},
		/* 46 TwoLetterGenus <- <(('C' 'a') / ('E' 'a') / ('G' 'e') / ('I' 'a') / ('I' 'o') / ('I' 'x') / ('L' 'o') / ('O' 'a') / ('R' 'a') / ('T' 'y') / ('U' 'a') / ('A' 'a') / ('J' 'a') / ('Z' 'u') / ('L' 'a') / ('Q' 'u') / ('A' 's') / ('B' 'a'))> */
		func() bool {
			position334, tokenIndex334 := position, tokenIndex
			{
				position335 := position
				{
					position336, tokenIndex336 := position, tokenIndex
					if buffer[position] != rune('C') {
						goto l337
					}
					position++
					if buffer[position] != rune('a') {
						goto l337
					}
					position++
					goto l336
				l337:
					position, tokenIndex = position336, tokenIndex336
					if buffer[position] != rune('E') {
						goto l338
					}
					position++
					if buffer[position] != rune('a') {
						goto l338
					}
					position++
					goto l336
				l338:
					position, tokenIndex = position336, tokenIndex336
					if buffer[position] != rune('G') {
						goto l339
					}
					position++
					if buffer[position] != rune('e') {
						goto l339
					}
					position++
					goto l336
				l339:
					position, tokenIndex = position336, tokenIndex336
					if buffer[position] != rune('I') {
						goto l340
					}
					position++
					if buffer[position] != rune('a') {
						goto l340
					}
					position++
					goto l336
				l340:
					position, tokenIndex = position336, tokenIndex336
					if buffer[position] != rune('I') {
						goto l341
					}
					position++
					if buffer[position] != rune('o') {
						goto l341
					}
					position++
					goto l336
				l341:
					position, tokenIndex = position336, tokenIndex336
					if buffer[position] != rune('I') {
						goto l342
					}
					position++
					if buffer[position] != rune('x') {
						goto l342
					}
					position++
					goto l336
				l342:
					position, tokenIndex = position336, tokenIndex336
					if buffer[position] != rune('L') {
						goto l343
					}
					position++
					if buffer[position] != rune('o') {
						goto l343
					}
					position++
					goto l336
				l343:
					position, tokenIndex = position336, tokenIndex336
					if buffer[position] != rune('O') {
						goto l344
					}
					position++
					if buffer[position] != rune('a') {
						goto l344
					}
					position++
					goto l336
				l344:
					position, tokenIndex = position336, tokenIndex336
					if buffer[position] != rune('R') {
						goto l345
					}
					position++
					if buffer[position] != rune('a') {
						goto l345
					}
					position++
					goto l336
				l345:
					position, tokenIndex = position336, tokenIndex336
					if buffer[position] != rune('T') {
						goto l346
					}
					position++
					if buffer[position] != rune('y') {
						goto l346
					}
					position++
					goto l336
				l346:
					position, tokenIndex = position336, tokenIndex336
					if buffer[position] != rune('U') {
						goto l347
					}
					position++
					if buffer[position] != rune('a') {
						goto l347
					}
					position++
					goto l336
				l347:
					position, tokenIndex = position336, tokenIndex336
					if buffer[position] != rune('A') {
						goto l348
					}
					position++
					if buffer[position] != rune('a') {
						goto l348
					}
					position++
					goto l336
				l348:
					position, tokenIndex = position336, tokenIndex336
					if buffer[position] != rune('J') {
						goto l349
					}
					position++
					if buffer[position] != rune('a') {
						goto l349
					}
					position++
					goto l336
				l349:
					position, tokenIndex = position336, tokenIndex336
					if buffer[position] != rune('Z') {
						goto l350
					}
					position++
					if buffer[position] != rune('u') {
						goto l350
					}
					position++
					goto l336
				l350:
					position, tokenIndex = position336, tokenIndex336
					if buffer[position] != rune('L') {
						goto l351
					}
					position++
					if buffer[position] != rune('a') {
						goto l351
					}
					position++
					goto l336
				l351:
					position, tokenIndex = position336, tokenIndex336
					if buffer[position] != rune('Q') {
						goto l352
					}
					position++
					if buffer[position] != rune('u') {
						goto l352
					}
					position++
					goto l336
				l352:
					position, tokenIndex = position336, tokenIndex336
					if buffer[position] != rune('A') {
						goto l353
					}
					position++
					if buffer[position] != rune('s') {
						goto l353
					}
					position++
					goto l336
				l353:
					position, tokenIndex = position336, tokenIndex336
					if buffer[position] != rune('B') {
						goto l334
					}
					position++
					if buffer[position] != rune('a') {
						goto l334
					}
					position++
				}
			l336:
				add(ruleTwoLetterGenus, position335)
			}
			return true
		l334:
			position, tokenIndex = position334, tokenIndex334
			return false
		},
		/* 47 Word <- <(!((('e' 'x') / AuthorPrefix / RankUninomial / Approximation / Word4) SpaceCharEOI) (WordApostr / WordStartsWithDigit / MultiDashedWord / Word2 / Word1) &(SpaceCharEOI / '('))> */
		func() bool {
			position354, tokenIndex354 := position, tokenIndex
			{
				position355 := position
				{
					position356, tokenIndex356 := position, tokenIndex
					{
						position357, tokenIndex357 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l358
						}
						position++
						if buffer[position] != rune('x') {
							goto l358
						}
						position++
						goto l357
					l358:
						position, tokenIndex = position357, tokenIndex357
						if !_rules[ruleAuthorPrefix]() {
							goto l359
						}
						goto l357
					l359:
						position, tokenIndex = position357, tokenIndex357
						if !_rules[ruleRankUninomial]() {
							goto l360
						}
						goto l357
					l360:
						position, tokenIndex = position357, tokenIndex357
						if !_rules[ruleApproximation]() {
							goto l361
						}
						goto l357
					l361:
						position, tokenIndex = position357, tokenIndex357
						if !_rules[ruleWord4]() {
							goto l356
						}
					}
				l357:
					if !_rules[ruleSpaceCharEOI]() {
						goto l356
					}
					goto l354
				l356:
					position, tokenIndex = position356, tokenIndex356
				}
				{
					position362, tokenIndex362 := position, tokenIndex
					if !_rules[ruleWordApostr]() {
						goto l363
					}
					goto l362
				l363:
					position, tokenIndex = position362, tokenIndex362
					if !_rules[ruleWordStartsWithDigit]() {
						goto l364
					}
					goto l362
				l364:
					position, tokenIndex = position362, tokenIndex362
					if !_rules[ruleMultiDashedWord]() {
						goto l365
					}
					goto l362
				l365:
					position, tokenIndex = position362, tokenIndex362
					if !_rules[ruleWord2]() {
						goto l366
					}
					goto l362
				l366:
					position, tokenIndex = position362, tokenIndex362
					if !_rules[ruleWord1]() {
						goto l354
					}
				}
			l362:
				{
					position367, tokenIndex367 := position, tokenIndex
					{
						position368, tokenIndex368 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l369
						}
						goto l368
					l369:
						position, tokenIndex = position368, tokenIndex368
						if buffer[position] != rune('(') {
							goto l354
						}
						position++
					}
				l368:
					position, tokenIndex = position367, tokenIndex367
				}
				add(ruleWord, position355)
			}
			return true
		l354:
			position, tokenIndex = position354, tokenIndex354
			return false
		},
		/* 48 Word1 <- <((LowerASCII Dash)? NameLowerChar NameLowerChar+)> */
		func() bool {
			position370, tokenIndex370 := position, tokenIndex
			{
				position371 := position
				{
					position372, tokenIndex372 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l372
					}
					if !_rules[ruleDash]() {
						goto l372
					}
					goto l373
				l372:
					position, tokenIndex = position372, tokenIndex372
				}
			l373:
				if !_rules[ruleNameLowerChar]() {
					goto l370
				}
				if !_rules[ruleNameLowerChar]() {
					goto l370
				}
			l374:
				{
					position375, tokenIndex375 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l375
					}
					goto l374
				l375:
					position, tokenIndex = position375, tokenIndex375
				}
				add(ruleWord1, position371)
			}
			return true
		l370:
			position, tokenIndex = position370, tokenIndex370
			return false
		},
		/* 49 WordStartsWithDigit <- <(('1' / '2' / '3' / '4' / '5' / '6' / '7' / '8' / '9') Nums? ('.' / Dash)? NameLowerChar NameLowerChar NameLowerChar NameLowerChar+)> */
		func() bool {
			position376, tokenIndex376 := position, tokenIndex
			{
				position377 := position
				{
					position378, tokenIndex378 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l379
					}
					position++
					goto l378
				l379:
					position, tokenIndex = position378, tokenIndex378
					if buffer[position] != rune('2') {
						goto l380
					}
					position++
					goto l378
				l380:
					position, tokenIndex = position378, tokenIndex378
					if buffer[position] != rune('3') {
						goto l381
					}
					position++
					goto l378
				l381:
					position, tokenIndex = position378, tokenIndex378
					if buffer[position] != rune('4') {
						goto l382
					}
					position++
					goto l378
				l382:
					position, tokenIndex = position378, tokenIndex378
					if buffer[position] != rune('5') {
						goto l383
					}
					position++
					goto l378
				l383:
					position, tokenIndex = position378, tokenIndex378
					if buffer[position] != rune('6') {
						goto l384
					}
					position++
					goto l378
				l384:
					position, tokenIndex = position378, tokenIndex378
					if buffer[position] != rune('7') {
						goto l385
					}
					position++
					goto l378
				l385:
					position, tokenIndex = position378, tokenIndex378
					if buffer[position] != rune('8') {
						goto l386
					}
					position++
					goto l378
				l386:
					position, tokenIndex = position378, tokenIndex378
					if buffer[position] != rune('9') {
						goto l376
					}
					position++
				}
			l378:
				{
					position387, tokenIndex387 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l387
					}
					goto l388
				l387:
					position, tokenIndex = position387, tokenIndex387
				}
			l388:
				{
					position389, tokenIndex389 := position, tokenIndex
					{
						position391, tokenIndex391 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l392
						}
						position++
						goto l391
					l392:
						position, tokenIndex = position391, tokenIndex391
						if !_rules[ruleDash]() {
							goto l389
						}
					}
				l391:
					goto l390
				l389:
					position, tokenIndex = position389, tokenIndex389
				}
			l390:
				if !_rules[ruleNameLowerChar]() {
					goto l376
				}
				if !_rules[ruleNameLowerChar]() {
					goto l376
				}
				if !_rules[ruleNameLowerChar]() {
					goto l376
				}
				if !_rules[ruleNameLowerChar]() {
					goto l376
				}
			l393:
				{
					position394, tokenIndex394 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l394
					}
					goto l393
				l394:
					position, tokenIndex = position394, tokenIndex394
				}
				add(ruleWordStartsWithDigit, position377)
			}
			return true
		l376:
			position, tokenIndex = position376, tokenIndex376
			return false
		},
		/* 50 Word2 <- <(NameLowerChar+ Dash? NameLowerChar+)> */
		func() bool {
			position395, tokenIndex395 := position, tokenIndex
			{
				position396 := position
				if !_rules[ruleNameLowerChar]() {
					goto l395
				}
			l397:
				{
					position398, tokenIndex398 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l398
					}
					goto l397
				l398:
					position, tokenIndex = position398, tokenIndex398
				}
				{
					position399, tokenIndex399 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l399
					}
					goto l400
				l399:
					position, tokenIndex = position399, tokenIndex399
				}
			l400:
				if !_rules[ruleNameLowerChar]() {
					goto l395
				}
			l401:
				{
					position402, tokenIndex402 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l402
					}
					goto l401
				l402:
					position, tokenIndex = position402, tokenIndex402
				}
				add(ruleWord2, position396)
			}
			return true
		l395:
			position, tokenIndex = position395, tokenIndex395
			return false
		},
		/* 51 WordApostr <- <(NameLowerChar NameLowerChar* Apostrophe Word1)> */
		func() bool {
			position403, tokenIndex403 := position, tokenIndex
			{
				position404 := position
				if !_rules[ruleNameLowerChar]() {
					goto l403
				}
			l405:
				{
					position406, tokenIndex406 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l406
					}
					goto l405
				l406:
					position, tokenIndex = position406, tokenIndex406
				}
				if !_rules[ruleApostrophe]() {
					goto l403
				}
				if !_rules[ruleWord1]() {
					goto l403
				}
				add(ruleWordApostr, position404)
			}
			return true
		l403:
			position, tokenIndex = position403, tokenIndex403
			return false
		},
		/* 52 Word4 <- <(NameLowerChar+ '.' NameLowerChar)> */
		func() bool {
			position407, tokenIndex407 := position, tokenIndex
			{
				position408 := position
				if !_rules[ruleNameLowerChar]() {
					goto l407
				}
			l409:
				{
					position410, tokenIndex410 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l410
					}
					goto l409
				l410:
					position, tokenIndex = position410, tokenIndex410
				}
				if buffer[position] != rune('.') {
					goto l407
				}
				position++
				if !_rules[ruleNameLowerChar]() {
					goto l407
				}
				add(ruleWord4, position408)
			}
			return true
		l407:
			position, tokenIndex = position407, tokenIndex407
			return false
		},
		/* 53 MultiDashedWord <- <(NameLowerChar+ Dash NameLowerChar+ Dash NameLowerChar+ (Dash NameLowerChar+)?)> */
		func() bool {
			position411, tokenIndex411 := position, tokenIndex
			{
				position412 := position
				if !_rules[ruleNameLowerChar]() {
					goto l411
				}
			l413:
				{
					position414, tokenIndex414 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l414
					}
					goto l413
				l414:
					position, tokenIndex = position414, tokenIndex414
				}
				if !_rules[ruleDash]() {
					goto l411
				}
				if !_rules[ruleNameLowerChar]() {
					goto l411
				}
			l415:
				{
					position416, tokenIndex416 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l416
					}
					goto l415
				l416:
					position, tokenIndex = position416, tokenIndex416
				}
				if !_rules[ruleDash]() {
					goto l411
				}
				if !_rules[ruleNameLowerChar]() {
					goto l411
				}
			l417:
				{
					position418, tokenIndex418 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l418
					}
					goto l417
				l418:
					position, tokenIndex = position418, tokenIndex418
				}
				{
					position419, tokenIndex419 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l419
					}
					if !_rules[ruleNameLowerChar]() {
						goto l419
					}
				l421:
					{
						position422, tokenIndex422 := position, tokenIndex
						if !_rules[ruleNameLowerChar]() {
							goto l422
						}
						goto l421
					l422:
						position, tokenIndex = position422, tokenIndex422
					}
					goto l420
				l419:
					position, tokenIndex = position419, tokenIndex419
				}
			l420:
				add(ruleMultiDashedWord, position412)
			}
			return true
		l411:
			position, tokenIndex = position411, tokenIndex411
			return false
		},
		/* 54 HybridChar <- <'×'> */
		func() bool {
			position423, tokenIndex423 := position, tokenIndex
			{
				position424 := position
				if buffer[position] != rune('×') {
					goto l423
				}
				position++
				add(ruleHybridChar, position424)
			}
			return true
		l423:
			position, tokenIndex = position423, tokenIndex423
			return false
		},
		/* 55 ApproxNameIgnored <- <.*> */
		func() bool {
			{
				position426 := position
			l427:
				{
					position428, tokenIndex428 := position, tokenIndex
					if !matchDot() {
						goto l428
					}
					goto l427
				l428:
					position, tokenIndex = position428, tokenIndex428
				}
				add(ruleApproxNameIgnored, position426)
			}
			return true
		},
		/* 56 Approximation <- <(('s' 'p' '.' _? ('n' 'r' '.')) / ('s' 'p' '.' _? ('a' 'f' 'f' '.')) / ('m' 'o' 'n' 's' 't' '.') / '?' / ((('s' 'p' 'p') / ('n' 'r') / ('s' 'p') / ('a' 'f' 'f') / ('s' 'p' 'e' 'c' 'i' 'e' 's')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position429, tokenIndex429 := position, tokenIndex
			{
				position430 := position
				{
					position431, tokenIndex431 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l432
					}
					position++
					if buffer[position] != rune('p') {
						goto l432
					}
					position++
					if buffer[position] != rune('.') {
						goto l432
					}
					position++
					{
						position433, tokenIndex433 := position, tokenIndex
						if !_rules[rule_]() {
							goto l433
						}
						goto l434
					l433:
						position, tokenIndex = position433, tokenIndex433
					}
				l434:
					if buffer[position] != rune('n') {
						goto l432
					}
					position++
					if buffer[position] != rune('r') {
						goto l432
					}
					position++
					if buffer[position] != rune('.') {
						goto l432
					}
					position++
					goto l431
				l432:
					position, tokenIndex = position431, tokenIndex431
					if buffer[position] != rune('s') {
						goto l435
					}
					position++
					if buffer[position] != rune('p') {
						goto l435
					}
					position++
					if buffer[position] != rune('.') {
						goto l435
					}
					position++
					{
						position436, tokenIndex436 := position, tokenIndex
						if !_rules[rule_]() {
							goto l436
						}
						goto l437
					l436:
						position, tokenIndex = position436, tokenIndex436
					}
				l437:
					if buffer[position] != rune('a') {
						goto l435
					}
					position++
					if buffer[position] != rune('f') {
						goto l435
					}
					position++
					if buffer[position] != rune('f') {
						goto l435
					}
					position++
					if buffer[position] != rune('.') {
						goto l435
					}
					position++
					goto l431
				l435:
					position, tokenIndex = position431, tokenIndex431
					if buffer[position] != rune('m') {
						goto l438
					}
					position++
					if buffer[position] != rune('o') {
						goto l438
					}
					position++
					if buffer[position] != rune('n') {
						goto l438
					}
					position++
					if buffer[position] != rune('s') {
						goto l438
					}
					position++
					if buffer[position] != rune('t') {
						goto l438
					}
					position++
					if buffer[position] != rune('.') {
						goto l438
					}
					position++
					goto l431
				l438:
					position, tokenIndex = position431, tokenIndex431
					if buffer[position] != rune('?') {
						goto l439
					}
					position++
					goto l431
				l439:
					position, tokenIndex = position431, tokenIndex431
					{
						position440, tokenIndex440 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l441
						}
						position++
						if buffer[position] != rune('p') {
							goto l441
						}
						position++
						if buffer[position] != rune('p') {
							goto l441
						}
						position++
						goto l440
					l441:
						position, tokenIndex = position440, tokenIndex440
						if buffer[position] != rune('n') {
							goto l442
						}
						position++
						if buffer[position] != rune('r') {
							goto l442
						}
						position++
						goto l440
					l442:
						position, tokenIndex = position440, tokenIndex440
						if buffer[position] != rune('s') {
							goto l443
						}
						position++
						if buffer[position] != rune('p') {
							goto l443
						}
						position++
						goto l440
					l443:
						position, tokenIndex = position440, tokenIndex440
						if buffer[position] != rune('a') {
							goto l444
						}
						position++
						if buffer[position] != rune('f') {
							goto l444
						}
						position++
						if buffer[position] != rune('f') {
							goto l444
						}
						position++
						goto l440
					l444:
						position, tokenIndex = position440, tokenIndex440
						if buffer[position] != rune('s') {
							goto l429
						}
						position++
						if buffer[position] != rune('p') {
							goto l429
						}
						position++
						if buffer[position] != rune('e') {
							goto l429
						}
						position++
						if buffer[position] != rune('c') {
							goto l429
						}
						position++
						if buffer[position] != rune('i') {
							goto l429
						}
						position++
						if buffer[position] != rune('e') {
							goto l429
						}
						position++
						if buffer[position] != rune('s') {
							goto l429
						}
						position++
					}
				l440:
					{
						position445, tokenIndex445 := position, tokenIndex
						{
							position447, tokenIndex447 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l446
							}
							position, tokenIndex = position447, tokenIndex447
						}
						goto l445
					l446:
						position, tokenIndex = position445, tokenIndex445
						if buffer[position] != rune('.') {
							goto l429
						}
						position++
					}
				l445:
				}
			l431:
				add(ruleApproximation, position430)
			}
			return true
		l429:
			position, tokenIndex = position429, tokenIndex429
			return false
		},
		/* 57 Authorship <- <((AuthorshipCombo / OriginalAuthorship) &(SpaceCharEOI / ';' / ','))> */
		func() bool {
			position448, tokenIndex448 := position, tokenIndex
			{
				position449 := position
				{
					position450, tokenIndex450 := position, tokenIndex
					if !_rules[ruleAuthorshipCombo]() {
						goto l451
					}
					goto l450
				l451:
					position, tokenIndex = position450, tokenIndex450
					if !_rules[ruleOriginalAuthorship]() {
						goto l448
					}
				}
			l450:
				{
					position452, tokenIndex452 := position, tokenIndex
					{
						position453, tokenIndex453 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l454
						}
						goto l453
					l454:
						position, tokenIndex = position453, tokenIndex453
						if buffer[position] != rune(';') {
							goto l455
						}
						position++
						goto l453
					l455:
						position, tokenIndex = position453, tokenIndex453
						if buffer[position] != rune(',') {
							goto l448
						}
						position++
					}
				l453:
					position, tokenIndex = position452, tokenIndex452
				}
				add(ruleAuthorship, position449)
			}
			return true
		l448:
			position, tokenIndex = position448, tokenIndex448
			return false
		},
		/* 58 AuthorshipCombo <- <(OriginalAuthorshipComb (_? CombinationAuthorship)?)> */
		func() bool {
			position456, tokenIndex456 := position, tokenIndex
			{
				position457 := position
				if !_rules[ruleOriginalAuthorshipComb]() {
					goto l456
				}
				{
					position458, tokenIndex458 := position, tokenIndex
					{
						position460, tokenIndex460 := position, tokenIndex
						if !_rules[rule_]() {
							goto l460
						}
						goto l461
					l460:
						position, tokenIndex = position460, tokenIndex460
					}
				l461:
					if !_rules[ruleCombinationAuthorship]() {
						goto l458
					}
					goto l459
				l458:
					position, tokenIndex = position458, tokenIndex458
				}
			l459:
				add(ruleAuthorshipCombo, position457)
			}
			return true
		l456:
			position, tokenIndex = position456, tokenIndex456
			return false
		},
		/* 59 OriginalAuthorship <- <AuthorsGroup> */
		func() bool {
			position462, tokenIndex462 := position, tokenIndex
			{
				position463 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l462
				}
				add(ruleOriginalAuthorship, position463)
			}
			return true
		l462:
			position, tokenIndex = position462, tokenIndex462
			return false
		},
		/* 60 OriginalAuthorshipComb <- <(BasionymAuthorshipYearMisformed / BasionymAuthorship / BasionymAuthorshipMissingParens)> */
		func() bool {
			position464, tokenIndex464 := position, tokenIndex
			{
				position465 := position
				{
					position466, tokenIndex466 := position, tokenIndex
					if !_rules[ruleBasionymAuthorshipYearMisformed]() {
						goto l467
					}
					goto l466
				l467:
					position, tokenIndex = position466, tokenIndex466
					if !_rules[ruleBasionymAuthorship]() {
						goto l468
					}
					goto l466
				l468:
					position, tokenIndex = position466, tokenIndex466
					if !_rules[ruleBasionymAuthorshipMissingParens]() {
						goto l464
					}
				}
			l466:
				add(ruleOriginalAuthorshipComb, position465)
			}
			return true
		l464:
			position, tokenIndex = position464, tokenIndex464
			return false
		},
		/* 61 CombinationAuthorship <- <AuthorsGroup> */
		func() bool {
			position469, tokenIndex469 := position, tokenIndex
			{
				position470 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l469
				}
				add(ruleCombinationAuthorship, position470)
			}
			return true
		l469:
			position, tokenIndex = position469, tokenIndex469
			return false
		},
		/* 62 BasionymAuthorshipMissingParens <- <(MissingParensStart / MissingParensEnd)> */
		func() bool {
			position471, tokenIndex471 := position, tokenIndex
			{
				position472 := position
				{
					position473, tokenIndex473 := position, tokenIndex
					if !_rules[ruleMissingParensStart]() {
						goto l474
					}
					goto l473
				l474:
					position, tokenIndex = position473, tokenIndex473
					if !_rules[ruleMissingParensEnd]() {
						goto l471
					}
				}
			l473:
				add(ruleBasionymAuthorshipMissingParens, position472)
			}
			return true
		l471:
			position, tokenIndex = position471, tokenIndex471
			return false
		},
		/* 63 MissingParensStart <- <('(' _? AuthorsGroup)> */
		func() bool {
			position475, tokenIndex475 := position, tokenIndex
			{
				position476 := position
				if buffer[position] != rune('(') {
					goto l475
				}
				position++
				{
					position477, tokenIndex477 := position, tokenIndex
					if !_rules[rule_]() {
						goto l477
					}
					goto l478
				l477:
					position, tokenIndex = position477, tokenIndex477
				}
			l478:
				if !_rules[ruleAuthorsGroup]() {
					goto l475
				}
				add(ruleMissingParensStart, position476)
			}
			return true
		l475:
			position, tokenIndex = position475, tokenIndex475
			return false
		},
		/* 64 MissingParensEnd <- <(AuthorsGroup _? ')')> */
		func() bool {
			position479, tokenIndex479 := position, tokenIndex
			{
				position480 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l479
				}
				{
					position481, tokenIndex481 := position, tokenIndex
					if !_rules[rule_]() {
						goto l481
					}
					goto l482
				l481:
					position, tokenIndex = position481, tokenIndex481
				}
			l482:
				if buffer[position] != rune(')') {
					goto l479
				}
				position++
				add(ruleMissingParensEnd, position480)
			}
			return true
		l479:
			position, tokenIndex = position479, tokenIndex479
			return false
		},
		/* 65 BasionymAuthorshipYearMisformed <- <('(' _? AuthorsGroup _? ')' (_? ',')? _? Year)> */
		func() bool {
			position483, tokenIndex483 := position, tokenIndex
			{
				position484 := position
				if buffer[position] != rune('(') {
					goto l483
				}
				position++
				{
					position485, tokenIndex485 := position, tokenIndex
					if !_rules[rule_]() {
						goto l485
					}
					goto l486
				l485:
					position, tokenIndex = position485, tokenIndex485
				}
			l486:
				if !_rules[ruleAuthorsGroup]() {
					goto l483
				}
				{
					position487, tokenIndex487 := position, tokenIndex
					if !_rules[rule_]() {
						goto l487
					}
					goto l488
				l487:
					position, tokenIndex = position487, tokenIndex487
				}
			l488:
				if buffer[position] != rune(')') {
					goto l483
				}
				position++
				{
					position489, tokenIndex489 := position, tokenIndex
					{
						position491, tokenIndex491 := position, tokenIndex
						if !_rules[rule_]() {
							goto l491
						}
						goto l492
					l491:
						position, tokenIndex = position491, tokenIndex491
					}
				l492:
					if buffer[position] != rune(',') {
						goto l489
					}
					position++
					goto l490
				l489:
					position, tokenIndex = position489, tokenIndex489
				}
			l490:
				{
					position493, tokenIndex493 := position, tokenIndex
					if !_rules[rule_]() {
						goto l493
					}
					goto l494
				l493:
					position, tokenIndex = position493, tokenIndex493
				}
			l494:
				if !_rules[ruleYear]() {
					goto l483
				}
				add(ruleBasionymAuthorshipYearMisformed, position484)
			}
			return true
		l483:
			position, tokenIndex = position483, tokenIndex483
			return false
		},
		/* 66 BasionymAuthorship <- <(BasionymAuthorship1 / BasionymAuthorship2Parens)> */
		func() bool {
			position495, tokenIndex495 := position, tokenIndex
			{
				position496 := position
				{
					position497, tokenIndex497 := position, tokenIndex
					if !_rules[ruleBasionymAuthorship1]() {
						goto l498
					}
					goto l497
				l498:
					position, tokenIndex = position497, tokenIndex497
					if !_rules[ruleBasionymAuthorship2Parens]() {
						goto l495
					}
				}
			l497:
				add(ruleBasionymAuthorship, position496)
			}
			return true
		l495:
			position, tokenIndex = position495, tokenIndex495
			return false
		},
		/* 67 BasionymAuthorship1 <- <('(' _? AuthorsGroup _? ')')> */
		func() bool {
			position499, tokenIndex499 := position, tokenIndex
			{
				position500 := position
				if buffer[position] != rune('(') {
					goto l499
				}
				position++
				{
					position501, tokenIndex501 := position, tokenIndex
					if !_rules[rule_]() {
						goto l501
					}
					goto l502
				l501:
					position, tokenIndex = position501, tokenIndex501
				}
			l502:
				if !_rules[ruleAuthorsGroup]() {
					goto l499
				}
				{
					position503, tokenIndex503 := position, tokenIndex
					if !_rules[rule_]() {
						goto l503
					}
					goto l504
				l503:
					position, tokenIndex = position503, tokenIndex503
				}
			l504:
				if buffer[position] != rune(')') {
					goto l499
				}
				position++
				add(ruleBasionymAuthorship1, position500)
			}
			return true
		l499:
			position, tokenIndex = position499, tokenIndex499
			return false
		},
		/* 68 BasionymAuthorship2Parens <- <('(' _? '(' _? AuthorsGroup _? ')' _? ')')> */
		func() bool {
			position505, tokenIndex505 := position, tokenIndex
			{
				position506 := position
				if buffer[position] != rune('(') {
					goto l505
				}
				position++
				{
					position507, tokenIndex507 := position, tokenIndex
					if !_rules[rule_]() {
						goto l507
					}
					goto l508
				l507:
					position, tokenIndex = position507, tokenIndex507
				}
			l508:
				if buffer[position] != rune('(') {
					goto l505
				}
				position++
				{
					position509, tokenIndex509 := position, tokenIndex
					if !_rules[rule_]() {
						goto l509
					}
					goto l510
				l509:
					position, tokenIndex = position509, tokenIndex509
				}
			l510:
				if !_rules[ruleAuthorsGroup]() {
					goto l505
				}
				{
					position511, tokenIndex511 := position, tokenIndex
					if !_rules[rule_]() {
						goto l511
					}
					goto l512
				l511:
					position, tokenIndex = position511, tokenIndex511
				}
			l512:
				if buffer[position] != rune(')') {
					goto l505
				}
				position++
				{
					position513, tokenIndex513 := position, tokenIndex
					if !_rules[rule_]() {
						goto l513
					}
					goto l514
				l513:
					position, tokenIndex = position513, tokenIndex513
				}
			l514:
				if buffer[position] != rune(')') {
					goto l505
				}
				position++
				add(ruleBasionymAuthorship2Parens, position506)
			}
			return true
		l505:
			position, tokenIndex = position505, tokenIndex505
			return false
		},
		/* 69 AuthorsGroup <- <(AuthorsTeam (_ (AuthorEmend / AuthorEx) AuthorsTeam)?)> */
		func() bool {
			position515, tokenIndex515 := position, tokenIndex
			{
				position516 := position
				if !_rules[ruleAuthorsTeam]() {
					goto l515
				}
				{
					position517, tokenIndex517 := position, tokenIndex
					if !_rules[rule_]() {
						goto l517
					}
					{
						position519, tokenIndex519 := position, tokenIndex
						if !_rules[ruleAuthorEmend]() {
							goto l520
						}
						goto l519
					l520:
						position, tokenIndex = position519, tokenIndex519
						if !_rules[ruleAuthorEx]() {
							goto l517
						}
					}
				l519:
					if !_rules[ruleAuthorsTeam]() {
						goto l517
					}
					goto l518
				l517:
					position, tokenIndex = position517, tokenIndex517
				}
			l518:
				add(ruleAuthorsGroup, position516)
			}
			return true
		l515:
			position, tokenIndex = position515, tokenIndex515
			return false
		},
		/* 70 AuthorsTeam <- <(Author (AuthorSep Author)* (_? ','? _? Year)?)> */
		func() bool {
			position521, tokenIndex521 := position, tokenIndex
			{
				position522 := position
				if !_rules[ruleAuthor]() {
					goto l521
				}
			l523:
				{
					position524, tokenIndex524 := position, tokenIndex
					if !_rules[ruleAuthorSep]() {
						goto l524
					}
					if !_rules[ruleAuthor]() {
						goto l524
					}
					goto l523
				l524:
					position, tokenIndex = position524, tokenIndex524
				}
				{
					position525, tokenIndex525 := position, tokenIndex
					{
						position527, tokenIndex527 := position, tokenIndex
						if !_rules[rule_]() {
							goto l527
						}
						goto l528
					l527:
						position, tokenIndex = position527, tokenIndex527
					}
				l528:
					{
						position529, tokenIndex529 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l529
						}
						position++
						goto l530
					l529:
						position, tokenIndex = position529, tokenIndex529
					}
				l530:
					{
						position531, tokenIndex531 := position, tokenIndex
						if !_rules[rule_]() {
							goto l531
						}
						goto l532
					l531:
						position, tokenIndex = position531, tokenIndex531
					}
				l532:
					if !_rules[ruleYear]() {
						goto l525
					}
					goto l526
				l525:
					position, tokenIndex = position525, tokenIndex525
				}
			l526:
				add(ruleAuthorsTeam, position522)
			}
			return true
		l521:
			position, tokenIndex = position521, tokenIndex521
			return false
		},
		/* 71 AuthorSep <- <(AuthorSep1 / AuthorSep2)> */
		func() bool {
			position533, tokenIndex533 := position, tokenIndex
			{
				position534 := position
				{
					position535, tokenIndex535 := position, tokenIndex
					if !_rules[ruleAuthorSep1]() {
						goto l536
					}
					goto l535
				l536:
					position, tokenIndex = position535, tokenIndex535
					if !_rules[ruleAuthorSep2]() {
						goto l533
					}
				}
			l535:
				add(ruleAuthorSep, position534)
			}
			return true
		l533:
			position, tokenIndex = position533, tokenIndex533
			return false
		},
		/* 72 AuthorSep1 <- <(_? (',' _)? ('&' / AuthorSepSpanish / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd')) _?)> */
		func() bool {
			position537, tokenIndex537 := position, tokenIndex
			{
				position538 := position
				{
					position539, tokenIndex539 := position, tokenIndex
					if !_rules[rule_]() {
						goto l539
					}
					goto l540
				l539:
					position, tokenIndex = position539, tokenIndex539
				}
			l540:
				{
					position541, tokenIndex541 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l541
					}
					position++
					if !_rules[rule_]() {
						goto l541
					}
					goto l542
				l541:
					position, tokenIndex = position541, tokenIndex541
				}
			l542:
				{
					position543, tokenIndex543 := position, tokenIndex
					if buffer[position] != rune('&') {
						goto l544
					}
					position++
					goto l543
				l544:
					position, tokenIndex = position543, tokenIndex543
					if !_rules[ruleAuthorSepSpanish]() {
						goto l545
					}
					goto l543
				l545:
					position, tokenIndex = position543, tokenIndex543
					if buffer[position] != rune('e') {
						goto l546
					}
					position++
					if buffer[position] != rune('t') {
						goto l546
					}
					position++
					goto l543
				l546:
					position, tokenIndex = position543, tokenIndex543
					if buffer[position] != rune('a') {
						goto l547
					}
					position++
					if buffer[position] != rune('n') {
						goto l547
					}
					position++
					if buffer[position] != rune('d') {
						goto l547
					}
					position++
					goto l543
				l547:
					position, tokenIndex = position543, tokenIndex543
					if buffer[position] != rune('a') {
						goto l537
					}
					position++
					if buffer[position] != rune('p') {
						goto l537
					}
					position++
					if buffer[position] != rune('u') {
						goto l537
					}
					position++
					if buffer[position] != rune('d') {
						goto l537
					}
					position++
				}
			l543:
				{
					position548, tokenIndex548 := position, tokenIndex
					if !_rules[rule_]() {
						goto l548
					}
					goto l549
				l548:
					position, tokenIndex = position548, tokenIndex548
				}
			l549:
				add(ruleAuthorSep1, position538)
			}
			return true
		l537:
			position, tokenIndex = position537, tokenIndex537
			return false
		},
		/* 73 AuthorSep2 <- <(_? ',' _?)> */
		func() bool {
			position550, tokenIndex550 := position, tokenIndex
			{
				position551 := position
				{
					position552, tokenIndex552 := position, tokenIndex
					if !_rules[rule_]() {
						goto l552
					}
					goto l553
				l552:
					position, tokenIndex = position552, tokenIndex552
				}
			l553:
				if buffer[position] != rune(',') {
					goto l550
				}
				position++
				{
					position554, tokenIndex554 := position, tokenIndex
					if !_rules[rule_]() {
						goto l554
					}
					goto l555
				l554:
					position, tokenIndex = position554, tokenIndex554
				}
			l555:
				add(ruleAuthorSep2, position551)
			}
			return true
		l550:
			position, tokenIndex = position550, tokenIndex550
			return false
		},
		/* 74 AuthorSepSpanish <- <(_? 'y' _?)> */
		func() bool {
			position556, tokenIndex556 := position, tokenIndex
			{
				position557 := position
				{
					position558, tokenIndex558 := position, tokenIndex
					if !_rules[rule_]() {
						goto l558
					}
					goto l559
				l558:
					position, tokenIndex = position558, tokenIndex558
				}
			l559:
				if buffer[position] != rune('y') {
					goto l556
				}
				position++
				{
					position560, tokenIndex560 := position, tokenIndex
					if !_rules[rule_]() {
						goto l560
					}
					goto l561
				l560:
					position, tokenIndex = position560, tokenIndex560
				}
			l561:
				add(ruleAuthorSepSpanish, position557)
			}
			return true
		l556:
			position, tokenIndex = position556, tokenIndex556
			return false
		},
		/* 75 AuthorEx <- <((('e' 'x' '.'?) / ('i' 'n')) _)> */
		func() bool {
			position562, tokenIndex562 := position, tokenIndex
			{
				position563 := position
				{
					position564, tokenIndex564 := position, tokenIndex
					if buffer[position] != rune('e') {
						goto l565
					}
					position++
					if buffer[position] != rune('x') {
						goto l565
					}
					position++
					{
						position566, tokenIndex566 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l566
						}
						position++
						goto l567
					l566:
						position, tokenIndex = position566, tokenIndex566
					}
				l567:
					goto l564
				l565:
					position, tokenIndex = position564, tokenIndex564
					if buffer[position] != rune('i') {
						goto l562
					}
					position++
					if buffer[position] != rune('n') {
						goto l562
					}
					position++
				}
			l564:
				if !_rules[rule_]() {
					goto l562
				}
				add(ruleAuthorEx, position563)
			}
			return true
		l562:
			position, tokenIndex = position562, tokenIndex562
			return false
		},
		/* 76 AuthorEmend <- <('e' 'm' 'e' 'n' 'd' '.'? _)> */
		func() bool {
			position568, tokenIndex568 := position, tokenIndex
			{
				position569 := position
				if buffer[position] != rune('e') {
					goto l568
				}
				position++
				if buffer[position] != rune('m') {
					goto l568
				}
				position++
				if buffer[position] != rune('e') {
					goto l568
				}
				position++
				if buffer[position] != rune('n') {
					goto l568
				}
				position++
				if buffer[position] != rune('d') {
					goto l568
				}
				position++
				{
					position570, tokenIndex570 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l570
					}
					position++
					goto l571
				l570:
					position, tokenIndex = position570, tokenIndex570
				}
			l571:
				if !_rules[rule_]() {
					goto l568
				}
				add(ruleAuthorEmend, position569)
			}
			return true
		l568:
			position, tokenIndex = position568, tokenIndex568
			return false
		},
		/* 77 Author <- <(Author0 / Author1 / Author2 / UnknownAuthor)> */
		func() bool {
			position572, tokenIndex572 := position, tokenIndex
			{
				position573 := position
				{
					position574, tokenIndex574 := position, tokenIndex
					if !_rules[ruleAuthor0]() {
						goto l575
					}
					goto l574
				l575:
					position, tokenIndex = position574, tokenIndex574
					if !_rules[ruleAuthor1]() {
						goto l576
					}
					goto l574
				l576:
					position, tokenIndex = position574, tokenIndex574
					if !_rules[ruleAuthor2]() {
						goto l577
					}
					goto l574
				l577:
					position, tokenIndex = position574, tokenIndex574
					if !_rules[ruleUnknownAuthor]() {
						goto l572
					}
				}
			l574:
				add(ruleAuthor, position573)
			}
			return true
		l572:
			position, tokenIndex = position572, tokenIndex572
			return false
		},
		/* 78 Author0 <- <(Author2 FiliusFNoSpace)> */
		func() bool {
			position578, tokenIndex578 := position, tokenIndex
			{
				position579 := position
				if !_rules[ruleAuthor2]() {
					goto l578
				}
				if !_rules[ruleFiliusFNoSpace]() {
					goto l578
				}
				add(ruleAuthor0, position579)
			}
			return true
		l578:
			position, tokenIndex = position578, tokenIndex578
			return false
		},
		/* 79 Author1 <- <(Author2 _? (Filius / AuthorSuffix))> */
		func() bool {
			position580, tokenIndex580 := position, tokenIndex
			{
				position581 := position
				if !_rules[ruleAuthor2]() {
					goto l580
				}
				{
					position582, tokenIndex582 := position, tokenIndex
					if !_rules[rule_]() {
						goto l582
					}
					goto l583
				l582:
					position, tokenIndex = position582, tokenIndex582
				}
			l583:
				{
					position584, tokenIndex584 := position, tokenIndex
					if !_rules[ruleFilius]() {
						goto l585
					}
					goto l584
				l585:
					position, tokenIndex = position584, tokenIndex584
					if !_rules[ruleAuthorSuffix]() {
						goto l580
					}
				}
			l584:
				add(ruleAuthor1, position581)
			}
			return true
		l580:
			position, tokenIndex = position580, tokenIndex580
			return false
		},
		/* 80 Author2 <- <(AuthorWord (_? AuthorWord)*)> */
		func() bool {
			position586, tokenIndex586 := position, tokenIndex
			{
				position587 := position
				if !_rules[ruleAuthorWord]() {
					goto l586
				}
			l588:
				{
					position589, tokenIndex589 := position, tokenIndex
					{
						position590, tokenIndex590 := position, tokenIndex
						if !_rules[rule_]() {
							goto l590
						}
						goto l591
					l590:
						position, tokenIndex = position590, tokenIndex590
					}
				l591:
					if !_rules[ruleAuthorWord]() {
						goto l589
					}
					goto l588
				l589:
					position, tokenIndex = position589, tokenIndex589
				}
				add(ruleAuthor2, position587)
			}
			return true
		l586:
			position, tokenIndex = position586, tokenIndex586
			return false
		},
		/* 81 UnknownAuthor <- <('?' / ((('a' 'u' 'c' 't') / ('a' 'n' 'o' 'n')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position592, tokenIndex592 := position, tokenIndex
			{
				position593 := position
				{
					position594, tokenIndex594 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l595
					}
					position++
					goto l594
				l595:
					position, tokenIndex = position594, tokenIndex594
					{
						position596, tokenIndex596 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l597
						}
						position++
						if buffer[position] != rune('u') {
							goto l597
						}
						position++
						if buffer[position] != rune('c') {
							goto l597
						}
						position++
						if buffer[position] != rune('t') {
							goto l597
						}
						position++
						goto l596
					l597:
						position, tokenIndex = position596, tokenIndex596
						if buffer[position] != rune('a') {
							goto l592
						}
						position++
						if buffer[position] != rune('n') {
							goto l592
						}
						position++
						if buffer[position] != rune('o') {
							goto l592
						}
						position++
						if buffer[position] != rune('n') {
							goto l592
						}
						position++
					}
				l596:
					{
						position598, tokenIndex598 := position, tokenIndex
						{
							position600, tokenIndex600 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l599
							}
							position, tokenIndex = position600, tokenIndex600
						}
						goto l598
					l599:
						position, tokenIndex = position598, tokenIndex598
						if buffer[position] != rune('.') {
							goto l592
						}
						position++
					}
				l598:
				}
			l594:
				add(ruleUnknownAuthor, position593)
			}
			return true
		l592:
			position, tokenIndex = position592, tokenIndex592
			return false
		},
		/* 82 AuthorWord <- <(!(('b' / 'B') ('o' / 'O') ('l' / 'L') ('d' / 'D') ':') (AuthorEtAl / AuthorWord2 / AuthorWord3 / AuthorPrefix))> */
		func() bool {
			position601, tokenIndex601 := position, tokenIndex
			{
				position602 := position
				{
					position603, tokenIndex603 := position, tokenIndex
					{
						position604, tokenIndex604 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l605
						}
						position++
						goto l604
					l605:
						position, tokenIndex = position604, tokenIndex604
						if buffer[position] != rune('B') {
							goto l603
						}
						position++
					}
				l604:
					{
						position606, tokenIndex606 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l607
						}
						position++
						goto l606
					l607:
						position, tokenIndex = position606, tokenIndex606
						if buffer[position] != rune('O') {
							goto l603
						}
						position++
					}
				l606:
					{
						position608, tokenIndex608 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l609
						}
						position++
						goto l608
					l609:
						position, tokenIndex = position608, tokenIndex608
						if buffer[position] != rune('L') {
							goto l603
						}
						position++
					}
				l608:
					{
						position610, tokenIndex610 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l611
						}
						position++
						goto l610
					l611:
						position, tokenIndex = position610, tokenIndex610
						if buffer[position] != rune('D') {
							goto l603
						}
						position++
					}
				l610:
					if buffer[position] != rune(':') {
						goto l603
					}
					position++
					goto l601
				l603:
					position, tokenIndex = position603, tokenIndex603
				}
				{
					position612, tokenIndex612 := position, tokenIndex
					if !_rules[ruleAuthorEtAl]() {
						goto l613
					}
					goto l612
				l613:
					position, tokenIndex = position612, tokenIndex612
					if !_rules[ruleAuthorWord2]() {
						goto l614
					}
					goto l612
				l614:
					position, tokenIndex = position612, tokenIndex612
					if !_rules[ruleAuthorWord3]() {
						goto l615
					}
					goto l612
				l615:
					position, tokenIndex = position612, tokenIndex612
					if !_rules[ruleAuthorPrefix]() {
						goto l601
					}
				}
			l612:
				add(ruleAuthorWord, position602)
			}
			return true
		l601:
			position, tokenIndex = position601, tokenIndex601
			return false
		},
		/* 83 AuthorEtAl <- <(('a' 'r' 'g' '.') / ('e' 't' ' ' 'a' 'l' '.' '{' '?' '}') / ((('e' 't') / '&') (' ' 'a' 'l') '.'?))> */
		func() bool {
			position616, tokenIndex616 := position, tokenIndex
			{
				position617 := position
				{
					position618, tokenIndex618 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l619
					}
					position++
					if buffer[position] != rune('r') {
						goto l619
					}
					position++
					if buffer[position] != rune('g') {
						goto l619
					}
					position++
					if buffer[position] != rune('.') {
						goto l619
					}
					position++
					goto l618
				l619:
					position, tokenIndex = position618, tokenIndex618
					if buffer[position] != rune('e') {
						goto l620
					}
					position++
					if buffer[position] != rune('t') {
						goto l620
					}
					position++
					if buffer[position] != rune(' ') {
						goto l620
					}
					position++
					if buffer[position] != rune('a') {
						goto l620
					}
					position++
					if buffer[position] != rune('l') {
						goto l620
					}
					position++
					if buffer[position] != rune('.') {
						goto l620
					}
					position++
					if buffer[position] != rune('{') {
						goto l620
					}
					position++
					if buffer[position] != rune('?') {
						goto l620
					}
					position++
					if buffer[position] != rune('}') {
						goto l620
					}
					position++
					goto l618
				l620:
					position, tokenIndex = position618, tokenIndex618
					{
						position621, tokenIndex621 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l622
						}
						position++
						if buffer[position] != rune('t') {
							goto l622
						}
						position++
						goto l621
					l622:
						position, tokenIndex = position621, tokenIndex621
						if buffer[position] != rune('&') {
							goto l616
						}
						position++
					}
				l621:
					if buffer[position] != rune(' ') {
						goto l616
					}
					position++
					if buffer[position] != rune('a') {
						goto l616
					}
					position++
					if buffer[position] != rune('l') {
						goto l616
					}
					position++
					{
						position623, tokenIndex623 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l623
						}
						position++
						goto l624
					l623:
						position, tokenIndex = position623, tokenIndex623
					}
				l624:
				}
			l618:
				add(ruleAuthorEtAl, position617)
			}
			return true
		l616:
			position, tokenIndex = position616, tokenIndex616
			return false
		},
		/* 84 AuthorWord2 <- <(AuthorWord3 Dash AuthorWordSoft)> */
		func() bool {
			position625, tokenIndex625 := position, tokenIndex
			{
				position626 := position
				if !_rules[ruleAuthorWord3]() {
					goto l625
				}
				if !_rules[ruleDash]() {
					goto l625
				}
				if !_rules[ruleAuthorWordSoft]() {
					goto l625
				}
				add(ruleAuthorWord2, position626)
			}
			return true
		l625:
			position, tokenIndex = position625, tokenIndex625
			return false
		},
		/* 85 AuthorWord3 <- <(AuthorPrefixGlued? (AllCapsAuthorWord / CapAuthorWord) '.'?)> */
		func() bool {
			position627, tokenIndex627 := position, tokenIndex
			{
				position628 := position
				{
					position629, tokenIndex629 := position, tokenIndex
					if !_rules[ruleAuthorPrefixGlued]() {
						goto l629
					}
					goto l630
				l629:
					position, tokenIndex = position629, tokenIndex629
				}
			l630:
				{
					position631, tokenIndex631 := position, tokenIndex
					if !_rules[ruleAllCapsAuthorWord]() {
						goto l632
					}
					goto l631
				l632:
					position, tokenIndex = position631, tokenIndex631
					if !_rules[ruleCapAuthorWord]() {
						goto l627
					}
				}
			l631:
				{
					position633, tokenIndex633 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l633
					}
					position++
					goto l634
				l633:
					position, tokenIndex = position633, tokenIndex633
				}
			l634:
				add(ruleAuthorWord3, position628)
			}
			return true
		l627:
			position, tokenIndex = position627, tokenIndex627
			return false
		},
		/* 86 AuthorWordSoft <- <(((AuthorUpperChar (AuthorUpperChar+ / AuthorLowerChar+)) / AuthorLowerChar+) '.'?)> */
		func() bool {
			position635, tokenIndex635 := position, tokenIndex
			{
				position636 := position
				{
					position637, tokenIndex637 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l638
					}
					{
						position639, tokenIndex639 := position, tokenIndex
						if !_rules[ruleAuthorUpperChar]() {
							goto l640
						}
					l641:
						{
							position642, tokenIndex642 := position, tokenIndex
							if !_rules[ruleAuthorUpperChar]() {
								goto l642
							}
							goto l641
						l642:
							position, tokenIndex = position642, tokenIndex642
						}
						goto l639
					l640:
						position, tokenIndex = position639, tokenIndex639
						if !_rules[ruleAuthorLowerChar]() {
							goto l638
						}
					l643:
						{
							position644, tokenIndex644 := position, tokenIndex
							if !_rules[ruleAuthorLowerChar]() {
								goto l644
							}
							goto l643
						l644:
							position, tokenIndex = position644, tokenIndex644
						}
					}
				l639:
					goto l637
				l638:
					position, tokenIndex = position637, tokenIndex637
					if !_rules[ruleAuthorLowerChar]() {
						goto l635
					}
				l645:
					{
						position646, tokenIndex646 := position, tokenIndex
						if !_rules[ruleAuthorLowerChar]() {
							goto l646
						}
						goto l645
					l646:
						position, tokenIndex = position646, tokenIndex646
					}
				}
			l637:
				{
					position647, tokenIndex647 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l647
					}
					position++
					goto l648
				l647:
					position, tokenIndex = position647, tokenIndex647
				}
			l648:
				add(ruleAuthorWordSoft, position636)
			}
			return true
		l635:
			position, tokenIndex = position635, tokenIndex635
			return false
		},
		/* 87 CapAuthorWord <- <(AuthorUpperChar AuthorLowerChar*)> */
		func() bool {
			position649, tokenIndex649 := position, tokenIndex
			{
				position650 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l649
				}
			l651:
				{
					position652, tokenIndex652 := position, tokenIndex
					if !_rules[ruleAuthorLowerChar]() {
						goto l652
					}
					goto l651
				l652:
					position, tokenIndex = position652, tokenIndex652
				}
				add(ruleCapAuthorWord, position650)
			}
			return true
		l649:
			position, tokenIndex = position649, tokenIndex649
			return false
		},
		/* 88 AllCapsAuthorWord <- <(AuthorUpperChar AuthorUpperChar+)> */
		func() bool {
			position653, tokenIndex653 := position, tokenIndex
			{
				position654 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l653
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l653
				}
			l655:
				{
					position656, tokenIndex656 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l656
					}
					goto l655
				l656:
					position, tokenIndex = position656, tokenIndex656
				}
				add(ruleAllCapsAuthorWord, position654)
			}
			return true
		l653:
			position, tokenIndex = position653, tokenIndex653
			return false
		},
		/* 89 Filius <- <(FiliusF / ('f' 'i' 'l' '.') / ('f' 'i' 'l' 'i' 'u' 's'))> */
		func() bool {
			position657, tokenIndex657 := position, tokenIndex
			{
				position658 := position
				{
					position659, tokenIndex659 := position, tokenIndex
					if !_rules[ruleFiliusF]() {
						goto l660
					}
					goto l659
				l660:
					position, tokenIndex = position659, tokenIndex659
					if buffer[position] != rune('f') {
						goto l661
					}
					position++
					if buffer[position] != rune('i') {
						goto l661
					}
					position++
					if buffer[position] != rune('l') {
						goto l661
					}
					position++
					if buffer[position] != rune('.') {
						goto l661
					}
					position++
					goto l659
				l661:
					position, tokenIndex = position659, tokenIndex659
					if buffer[position] != rune('f') {
						goto l657
					}
					position++
					if buffer[position] != rune('i') {
						goto l657
					}
					position++
					if buffer[position] != rune('l') {
						goto l657
					}
					position++
					if buffer[position] != rune('i') {
						goto l657
					}
					position++
					if buffer[position] != rune('u') {
						goto l657
					}
					position++
					if buffer[position] != rune('s') {
						goto l657
					}
					position++
				}
			l659:
				add(ruleFilius, position658)
			}
			return true
		l657:
			position, tokenIndex = position657, tokenIndex657
			return false
		},
		/* 90 FiliusF <- <('f' '.' !(_ Word))> */
		func() bool {
			position662, tokenIndex662 := position, tokenIndex
			{
				position663 := position
				if buffer[position] != rune('f') {
					goto l662
				}
				position++
				if buffer[position] != rune('.') {
					goto l662
				}
				position++
				{
					position664, tokenIndex664 := position, tokenIndex
					if !_rules[rule_]() {
						goto l664
					}
					if !_rules[ruleWord]() {
						goto l664
					}
					goto l662
				l664:
					position, tokenIndex = position664, tokenIndex664
				}
				add(ruleFiliusF, position663)
			}
			return true
		l662:
			position, tokenIndex = position662, tokenIndex662
			return false
		},
		/* 91 FiliusFNoSpace <- <('f' '.')> */
		func() bool {
			position665, tokenIndex665 := position, tokenIndex
			{
				position666 := position
				if buffer[position] != rune('f') {
					goto l665
				}
				position++
				if buffer[position] != rune('.') {
					goto l665
				}
				position++
				add(ruleFiliusFNoSpace, position666)
			}
			return true
		l665:
			position, tokenIndex = position665, tokenIndex665
			return false
		},
		/* 92 AuthorSuffix <- <('b' 'i' 's')> */
		func() bool {
			position667, tokenIndex667 := position, tokenIndex
			{
				position668 := position
				if buffer[position] != rune('b') {
					goto l667
				}
				position++
				if buffer[position] != rune('i') {
					goto l667
				}
				position++
				if buffer[position] != rune('s') {
					goto l667
				}
				position++
				add(ruleAuthorSuffix, position668)
			}
			return true
		l667:
			position, tokenIndex = position667, tokenIndex667
			return false
		},
		/* 93 AuthorPrefixGlued <- <(('d' / 'O' / 'L' / ('M' 'c') / 'M') Apostrophe)> */
		func() bool {
			position669, tokenIndex669 := position, tokenIndex
			{
				position670 := position
				{
					position671, tokenIndex671 := position, tokenIndex
					if buffer[position] != rune('d') {
						goto l672
					}
					position++
					goto l671
				l672:
					position, tokenIndex = position671, tokenIndex671
					if buffer[position] != rune('O') {
						goto l673
					}
					position++
					goto l671
				l673:
					position, tokenIndex = position671, tokenIndex671
					if buffer[position] != rune('L') {
						goto l674
					}
					position++
					goto l671
				l674:
					position, tokenIndex = position671, tokenIndex671
					if buffer[position] != rune('M') {
						goto l675
					}
					position++
					if buffer[position] != rune('c') {
						goto l675
					}
					position++
					goto l671
				l675:
					position, tokenIndex = position671, tokenIndex671
					if buffer[position] != rune('M') {
						goto l669
					}
					position++
				}
			l671:
				if !_rules[ruleApostrophe]() {
					goto l669
				}
				add(ruleAuthorPrefixGlued, position670)
			}
			return true
		l669:
			position, tokenIndex = position669, tokenIndex669
			return false
		},
		/* 94 AuthorPrefix <- <(AuthorPrefix1 / AuthorPrefix2)> */
		func() bool {
			position676, tokenIndex676 := position, tokenIndex
			{
				position677 := position
				{
					position678, tokenIndex678 := position, tokenIndex
					if !_rules[ruleAuthorPrefix1]() {
						goto l679
					}
					goto l678
				l679:
					position, tokenIndex = position678, tokenIndex678
					if !_rules[ruleAuthorPrefix2]() {
						goto l676
					}
				}
			l678:
				add(ruleAuthorPrefix, position677)
			}
			return true
		l676:
			position, tokenIndex = position676, tokenIndex676
			return false
		},
		/* 95 AuthorPrefix2 <- <(('v' '.' (_? ('d' '.'))?) / (Apostrophe 't'))> */
		func() bool {
			position680, tokenIndex680 := position, tokenIndex
			{
				position681 := position
				{
					position682, tokenIndex682 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l683
					}
					position++
					if buffer[position] != rune('.') {
						goto l683
					}
					position++
					{
						position684, tokenIndex684 := position, tokenIndex
						{
							position686, tokenIndex686 := position, tokenIndex
							if !_rules[rule_]() {
								goto l686
							}
							goto l687
						l686:
							position, tokenIndex = position686, tokenIndex686
						}
					l687:
						if buffer[position] != rune('d') {
							goto l684
						}
						position++
						if buffer[position] != rune('.') {
							goto l684
						}
						position++
						goto l685
					l684:
						position, tokenIndex = position684, tokenIndex684
					}
				l685:
					goto l682
				l683:
					position, tokenIndex = position682, tokenIndex682
					if !_rules[ruleApostrophe]() {
						goto l680
					}
					if buffer[position] != rune('t') {
						goto l680
					}
					position++
				}
			l682:
				add(ruleAuthorPrefix2, position681)
			}
			return true
		l680:
			position, tokenIndex = position680, tokenIndex680
			return false
		},
		/* 96 AuthorPrefix1 <- <((('a' 'b') / ('a' 'f') / ('b' 'i' 's') / ('d' 'a') / ('d' 'e' 'r') / ('d' 'e' 's') / ('d' 'e' 'n') / ('d' 'e' 'l') / ('d' 'e' 'l' 'l' 'a') / ('d' 'e' 'l' 'a') / ('d' 'e') / ('d' 'i') / ('d' 'u') / ('e' 'l') / ('l' 'a') / ('l' 'e') / ('t' 'e' 'r') / ('v' 'a' 'n') / ('d' Apostrophe) / ('i' 'n' Apostrophe 't') / ('z' 'u' 'r') / ('z' 'u') / ('v' 'o' 'n' (_ (('d' '.') / ('d' 'e' 'm')))?) / ('v' (_ 'd')?)) &_)> */
		func() bool {
			position688, tokenIndex688 := position, tokenIndex
			{
				position689 := position
				{
					position690, tokenIndex690 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l691
					}
					position++
					if buffer[position] != rune('b') {
						goto l691
					}
					position++
					goto l690
				l691:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('a') {
						goto l692
					}
					position++
					if buffer[position] != rune('f') {
						goto l692
					}
					position++
					goto l690
				l692:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('b') {
						goto l693
					}
					position++
					if buffer[position] != rune('i') {
						goto l693
					}
					position++
					if buffer[position] != rune('s') {
						goto l693
					}
					position++
					goto l690
				l693:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('d') {
						goto l694
					}
					position++
					if buffer[position] != rune('a') {
						goto l694
					}
					position++
					goto l690
				l694:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('d') {
						goto l695
					}
					position++
					if buffer[position] != rune('e') {
						goto l695
					}
					position++
					if buffer[position] != rune('r') {
						goto l695
					}
					position++
					goto l690
				l695:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('d') {
						goto l696
					}
					position++
					if buffer[position] != rune('e') {
						goto l696
					}
					position++
					if buffer[position] != rune('s') {
						goto l696
					}
					position++
					goto l690
				l696:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('d') {
						goto l697
					}
					position++
					if buffer[position] != rune('e') {
						goto l697
					}
					position++
					if buffer[position] != rune('n') {
						goto l697
					}
					position++
					goto l690
				l697:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('d') {
						goto l698
					}
					position++
					if buffer[position] != rune('e') {
						goto l698
					}
					position++
					if buffer[position] != rune('l') {
						goto l698
					}
					position++
					goto l690
				l698:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('d') {
						goto l699
					}
					position++
					if buffer[position] != rune('e') {
						goto l699
					}
					position++
					if buffer[position] != rune('l') {
						goto l699
					}
					position++
					if buffer[position] != rune('l') {
						goto l699
					}
					position++
					if buffer[position] != rune('a') {
						goto l699
					}
					position++
					goto l690
				l699:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('d') {
						goto l700
					}
					position++
					if buffer[position] != rune('e') {
						goto l700
					}
					position++
					if buffer[position] != rune('l') {
						goto l700
					}
					position++
					if buffer[position] != rune('a') {
						goto l700
					}
					position++
					goto l690
				l700:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('d') {
						goto l701
					}
					position++
					if buffer[position] != rune('e') {
						goto l701
					}
					position++
					goto l690
				l701:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('d') {
						goto l702
					}
					position++
					if buffer[position] != rune('i') {
						goto l702
					}
					position++
					goto l690
				l702:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('d') {
						goto l703
					}
					position++
					if buffer[position] != rune('u') {
						goto l703
					}
					position++
					goto l690
				l703:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('e') {
						goto l704
					}
					position++
					if buffer[position] != rune('l') {
						goto l704
					}
					position++
					goto l690
				l704:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('l') {
						goto l705
					}
					position++
					if buffer[position] != rune('a') {
						goto l705
					}
					position++
					goto l690
				l705:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('l') {
						goto l706
					}
					position++
					if buffer[position] != rune('e') {
						goto l706
					}
					position++
					goto l690
				l706:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('t') {
						goto l707
					}
					position++
					if buffer[position] != rune('e') {
						goto l707
					}
					position++
					if buffer[position] != rune('r') {
						goto l707
					}
					position++
					goto l690
				l707:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('v') {
						goto l708
					}
					position++
					if buffer[position] != rune('a') {
						goto l708
					}
					position++
					if buffer[position] != rune('n') {
						goto l708
					}
					position++
					goto l690
				l708:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('d') {
						goto l709
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l709
					}
					goto l690
				l709:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('i') {
						goto l710
					}
					position++
					if buffer[position] != rune('n') {
						goto l710
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l710
					}
					if buffer[position] != rune('t') {
						goto l710
					}
					position++
					goto l690
				l710:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('z') {
						goto l711
					}
					position++
					if buffer[position] != rune('u') {
						goto l711
					}
					position++
					if buffer[position] != rune('r') {
						goto l711
					}
					position++
					goto l690
				l711:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('z') {
						goto l712
					}
					position++
					if buffer[position] != rune('u') {
						goto l712
					}
					position++
					goto l690
				l712:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('v') {
						goto l713
					}
					position++
					if buffer[position] != rune('o') {
						goto l713
					}
					position++
					if buffer[position] != rune('n') {
						goto l713
					}
					position++
					{
						position714, tokenIndex714 := position, tokenIndex
						if !_rules[rule_]() {
							goto l714
						}
						{
							position716, tokenIndex716 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l717
							}
							position++
							if buffer[position] != rune('.') {
								goto l717
							}
							position++
							goto l716
						l717:
							position, tokenIndex = position716, tokenIndex716
							if buffer[position] != rune('d') {
								goto l714
							}
							position++
							if buffer[position] != rune('e') {
								goto l714
							}
							position++
							if buffer[position] != rune('m') {
								goto l714
							}
							position++
						}
					l716:
						goto l715
					l714:
						position, tokenIndex = position714, tokenIndex714
					}
				l715:
					goto l690
				l713:
					position, tokenIndex = position690, tokenIndex690
					if buffer[position] != rune('v') {
						goto l688
					}
					position++
					{
						position718, tokenIndex718 := position, tokenIndex
						if !_rules[rule_]() {
							goto l718
						}
						if buffer[position] != rune('d') {
							goto l718
						}
						position++
						goto l719
					l718:
						position, tokenIndex = position718, tokenIndex718
					}
				l719:
				}
			l690:
				{
					position720, tokenIndex720 := position, tokenIndex
					if !_rules[rule_]() {
						goto l688
					}
					position, tokenIndex = position720, tokenIndex720
				}
				add(ruleAuthorPrefix1, position689)
			}
			return true
		l688:
			position, tokenIndex = position688, tokenIndex688
			return false
		},
		/* 97 AuthorUpperChar <- <(UpperASCII / MiscodedChar / ('À' / 'Á' / 'Â' / 'Ã' / 'Ä' / 'Å' / 'Æ' / 'Ç' / 'È' / 'É' / 'Ê' / 'Ë' / 'Ì' / 'Í' / 'Î' / 'Ï' / 'Ð' / 'Ñ' / 'Ò' / 'Ó' / 'Ô' / 'Õ' / 'Ö' / 'Ø' / 'Ù' / 'Ú' / 'Û' / 'Ü' / 'Ý' / 'Ć' / 'Č' / 'Ď' / 'İ' / 'Ķ' / 'Ĺ' / 'ĺ' / 'Ľ' / 'ľ' / 'Ł' / 'ł' / 'Ņ' / 'Ō' / 'Ő' / 'Œ' / 'Ř' / 'Ś' / 'Ŝ' / 'Ş' / 'Š' / 'Ÿ' / 'Ź' / 'Ż' / 'Ž' / 'ƒ' / 'Ǿ' / 'Ș' / 'Ț'))> */
		func() bool {
			position721, tokenIndex721 := position, tokenIndex
			{
				position722 := position
				{
					position723, tokenIndex723 := position, tokenIndex
					if !_rules[ruleUpperASCII]() {
						goto l724
					}
					goto l723
				l724:
					position, tokenIndex = position723, tokenIndex723
					if !_rules[ruleMiscodedChar]() {
						goto l725
					}
					goto l723
				l725:
					position, tokenIndex = position723, tokenIndex723
					{
						position726, tokenIndex726 := position, tokenIndex
						if buffer[position] != rune('À') {
							goto l727
						}
						position++
						goto l726
					l727:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Á') {
							goto l728
						}
						position++
						goto l726
					l728:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Â') {
							goto l729
						}
						position++
						goto l726
					l729:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ã') {
							goto l730
						}
						position++
						goto l726
					l730:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ä') {
							goto l731
						}
						position++
						goto l726
					l731:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Å') {
							goto l732
						}
						position++
						goto l726
					l732:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Æ') {
							goto l733
						}
						position++
						goto l726
					l733:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ç') {
							goto l734
						}
						position++
						goto l726
					l734:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('È') {
							goto l735
						}
						position++
						goto l726
					l735:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('É') {
							goto l736
						}
						position++
						goto l726
					l736:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ê') {
							goto l737
						}
						position++
						goto l726
					l737:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ë') {
							goto l738
						}
						position++
						goto l726
					l738:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ì') {
							goto l739
						}
						position++
						goto l726
					l739:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Í') {
							goto l740
						}
						position++
						goto l726
					l740:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Î') {
							goto l741
						}
						position++
						goto l726
					l741:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ï') {
							goto l742
						}
						position++
						goto l726
					l742:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ð') {
							goto l743
						}
						position++
						goto l726
					l743:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ñ') {
							goto l744
						}
						position++
						goto l726
					l744:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ò') {
							goto l745
						}
						position++
						goto l726
					l745:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ó') {
							goto l746
						}
						position++
						goto l726
					l746:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ô') {
							goto l747
						}
						position++
						goto l726
					l747:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Õ') {
							goto l748
						}
						position++
						goto l726
					l748:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ö') {
							goto l749
						}
						position++
						goto l726
					l749:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ø') {
							goto l750
						}
						position++
						goto l726
					l750:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ù') {
							goto l751
						}
						position++
						goto l726
					l751:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ú') {
							goto l752
						}
						position++
						goto l726
					l752:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Û') {
							goto l753
						}
						position++
						goto l726
					l753:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ü') {
							goto l754
						}
						position++
						goto l726
					l754:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ý') {
							goto l755
						}
						position++
						goto l726
					l755:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ć') {
							goto l756
						}
						position++
						goto l726
					l756:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Č') {
							goto l757
						}
						position++
						goto l726
					l757:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ď') {
							goto l758
						}
						position++
						goto l726
					l758:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('İ') {
							goto l759
						}
						position++
						goto l726
					l759:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ķ') {
							goto l760
						}
						position++
						goto l726
					l760:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ĺ') {
							goto l761
						}
						position++
						goto l726
					l761:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('ĺ') {
							goto l762
						}
						position++
						goto l726
					l762:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ľ') {
							goto l763
						}
						position++
						goto l726
					l763:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('ľ') {
							goto l764
						}
						position++
						goto l726
					l764:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ł') {
							goto l765
						}
						position++
						goto l726
					l765:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('ł') {
							goto l766
						}
						position++
						goto l726
					l766:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ņ') {
							goto l767
						}
						position++
						goto l726
					l767:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ō') {
							goto l768
						}
						position++
						goto l726
					l768:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ő') {
							goto l769
						}
						position++
						goto l726
					l769:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Œ') {
							goto l770
						}
						position++
						goto l726
					l770:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ř') {
							goto l771
						}
						position++
						goto l726
					l771:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ś') {
							goto l772
						}
						position++
						goto l726
					l772:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ŝ') {
							goto l773
						}
						position++
						goto l726
					l773:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ş') {
							goto l774
						}
						position++
						goto l726
					l774:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Š') {
							goto l775
						}
						position++
						goto l726
					l775:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ÿ') {
							goto l776
						}
						position++
						goto l726
					l776:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ź') {
							goto l777
						}
						position++
						goto l726
					l777:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ż') {
							goto l778
						}
						position++
						goto l726
					l778:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ž') {
							goto l779
						}
						position++
						goto l726
					l779:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('ƒ') {
							goto l780
						}
						position++
						goto l726
					l780:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ǿ') {
							goto l781
						}
						position++
						goto l726
					l781:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ș') {
							goto l782
						}
						position++
						goto l726
					l782:
						position, tokenIndex = position726, tokenIndex726
						if buffer[position] != rune('Ț') {
							goto l721
						}
						position++
					}
				l726:
				}
			l723:
				add(ruleAuthorUpperChar, position722)
			}
			return true
		l721:
			position, tokenIndex = position721, tokenIndex721
			return false
		},
		/* 98 AuthorLowerChar <- <(LowerASCII / MiscodedChar / ('à' / 'á' / 'â' / 'ã' / 'ä' / 'å' / 'æ' / 'ç' / 'è' / 'é' / 'ê' / 'ë' / 'ì' / 'í' / 'î' / 'ï' / 'ð' / 'ñ' / 'ò' / 'ó' / 'ó' / 'ô' / 'õ' / 'ö' / 'ø' / 'ù' / 'ú' / 'û' / 'ü' / 'ý' / 'ÿ' / 'ā' / 'ă' / 'ą' / 'ć' / 'ĉ' / 'č' / 'ď' / 'đ' / '\'' / 'ē' / 'ĕ' / 'ė' / 'ę' / 'ě' / 'ğ' / 'ī' / 'ĭ' / 'İ' / 'ı' / 'ĺ' / 'ľ' / 'ł' / 'ń' / 'ņ' / 'ň' / 'ŏ' / 'ő' / 'œ' / 'ŕ' / 'ř' / 'ś' / 'ş' / 'š' / 'ţ' / 'ť' / 'ũ' / 'ū' / 'ŭ' / 'ů' / 'ű' / 'ź' / 'ż' / 'ž' / 'ſ' / 'ǎ' / 'ǔ' / 'ǧ' / 'ș' / 'ț' / 'ȳ' / 'ß'))> */
		func() bool {
			position783, tokenIndex783 := position, tokenIndex
			{
				position784 := position
				{
					position785, tokenIndex785 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l786
					}
					goto l785
				l786:
					position, tokenIndex = position785, tokenIndex785
					if !_rules[ruleMiscodedChar]() {
						goto l787
					}
					goto l785
				l787:
					position, tokenIndex = position785, tokenIndex785
					{
						position788, tokenIndex788 := position, tokenIndex
						if buffer[position] != rune('à') {
							goto l789
						}
						position++
						goto l788
					l789:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('á') {
							goto l790
						}
						position++
						goto l788
					l790:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('â') {
							goto l791
						}
						position++
						goto l788
					l791:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ã') {
							goto l792
						}
						position++
						goto l788
					l792:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ä') {
							goto l793
						}
						position++
						goto l788
					l793:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('å') {
							goto l794
						}
						position++
						goto l788
					l794:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('æ') {
							goto l795
						}
						position++
						goto l788
					l795:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ç') {
							goto l796
						}
						position++
						goto l788
					l796:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('è') {
							goto l797
						}
						position++
						goto l788
					l797:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('é') {
							goto l798
						}
						position++
						goto l788
					l798:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ê') {
							goto l799
						}
						position++
						goto l788
					l799:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ë') {
							goto l800
						}
						position++
						goto l788
					l800:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ì') {
							goto l801
						}
						position++
						goto l788
					l801:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('í') {
							goto l802
						}
						position++
						goto l788
					l802:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('î') {
							goto l803
						}
						position++
						goto l788
					l803:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ï') {
							goto l804
						}
						position++
						goto l788
					l804:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ð') {
							goto l805
						}
						position++
						goto l788
					l805:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ñ') {
							goto l806
						}
						position++
						goto l788
					l806:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ò') {
							goto l807
						}
						position++
						goto l788
					l807:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ó') {
							goto l808
						}
						position++
						goto l788
					l808:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ó') {
							goto l809
						}
						position++
						goto l788
					l809:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ô') {
							goto l810
						}
						position++
						goto l788
					l810:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('õ') {
							goto l811
						}
						position++
						goto l788
					l811:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ö') {
							goto l812
						}
						position++
						goto l788
					l812:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ø') {
							goto l813
						}
						position++
						goto l788
					l813:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ù') {
							goto l814
						}
						position++
						goto l788
					l814:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ú') {
							goto l815
						}
						position++
						goto l788
					l815:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('û') {
							goto l816
						}
						position++
						goto l788
					l816:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ü') {
							goto l817
						}
						position++
						goto l788
					l817:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ý') {
							goto l818
						}
						position++
						goto l788
					l818:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ÿ') {
							goto l819
						}
						position++
						goto l788
					l819:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ā') {
							goto l820
						}
						position++
						goto l788
					l820:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ă') {
							goto l821
						}
						position++
						goto l788
					l821:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ą') {
							goto l822
						}
						position++
						goto l788
					l822:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ć') {
							goto l823
						}
						position++
						goto l788
					l823:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ĉ') {
							goto l824
						}
						position++
						goto l788
					l824:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('č') {
							goto l825
						}
						position++
						goto l788
					l825:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ď') {
							goto l826
						}
						position++
						goto l788
					l826:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('đ') {
							goto l827
						}
						position++
						goto l788
					l827:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('\'') {
							goto l828
						}
						position++
						goto l788
					l828:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ē') {
							goto l829
						}
						position++
						goto l788
					l829:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ĕ') {
							goto l830
						}
						position++
						goto l788
					l830:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ė') {
							goto l831
						}
						position++
						goto l788
					l831:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ę') {
							goto l832
						}
						position++
						goto l788
					l832:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ě') {
							goto l833
						}
						position++
						goto l788
					l833:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ğ') {
							goto l834
						}
						position++
						goto l788
					l834:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ī') {
							goto l835
						}
						position++
						goto l788
					l835:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ĭ') {
							goto l836
						}
						position++
						goto l788
					l836:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('İ') {
							goto l837
						}
						position++
						goto l788
					l837:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ı') {
							goto l838
						}
						position++
						goto l788
					l838:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ĺ') {
							goto l839
						}
						position++
						goto l788
					l839:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ľ') {
							goto l840
						}
						position++
						goto l788
					l840:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ł') {
							goto l841
						}
						position++
						goto l788
					l841:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ń') {
							goto l842
						}
						position++
						goto l788
					l842:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ņ') {
							goto l843
						}
						position++
						goto l788
					l843:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ň') {
							goto l844
						}
						position++
						goto l788
					l844:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ŏ') {
							goto l845
						}
						position++
						goto l788
					l845:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ő') {
							goto l846
						}
						position++
						goto l788
					l846:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('œ') {
							goto l847
						}
						position++
						goto l788
					l847:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ŕ') {
							goto l848
						}
						position++
						goto l788
					l848:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ř') {
							goto l849
						}
						position++
						goto l788
					l849:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ś') {
							goto l850
						}
						position++
						goto l788
					l850:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ş') {
							goto l851
						}
						position++
						goto l788
					l851:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('š') {
							goto l852
						}
						position++
						goto l788
					l852:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ţ') {
							goto l853
						}
						position++
						goto l788
					l853:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ť') {
							goto l854
						}
						position++
						goto l788
					l854:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ũ') {
							goto l855
						}
						position++
						goto l788
					l855:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ū') {
							goto l856
						}
						position++
						goto l788
					l856:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ŭ') {
							goto l857
						}
						position++
						goto l788
					l857:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ů') {
							goto l858
						}
						position++
						goto l788
					l858:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ű') {
							goto l859
						}
						position++
						goto l788
					l859:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ź') {
							goto l860
						}
						position++
						goto l788
					l860:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ż') {
							goto l861
						}
						position++
						goto l788
					l861:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ž') {
							goto l862
						}
						position++
						goto l788
					l862:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ſ') {
							goto l863
						}
						position++
						goto l788
					l863:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ǎ') {
							goto l864
						}
						position++
						goto l788
					l864:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ǔ') {
							goto l865
						}
						position++
						goto l788
					l865:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ǧ') {
							goto l866
						}
						position++
						goto l788
					l866:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ș') {
							goto l867
						}
						position++
						goto l788
					l867:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ț') {
							goto l868
						}
						position++
						goto l788
					l868:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ȳ') {
							goto l869
						}
						position++
						goto l788
					l869:
						position, tokenIndex = position788, tokenIndex788
						if buffer[position] != rune('ß') {
							goto l783
						}
						position++
					}
				l788:
				}
			l785:
				add(ruleAuthorLowerChar, position784)
			}
			return true
		l783:
			position, tokenIndex = position783, tokenIndex783
			return false
		},
		/* 99 Year <- <(YearRange / YearApprox / YearWithParens / YearWithPage / YearWithDot / YearWithChar / YearNum)> */
		func() bool {
			position870, tokenIndex870 := position, tokenIndex
			{
				position871 := position
				{
					position872, tokenIndex872 := position, tokenIndex
					if !_rules[ruleYearRange]() {
						goto l873
					}
					goto l872
				l873:
					position, tokenIndex = position872, tokenIndex872
					if !_rules[ruleYearApprox]() {
						goto l874
					}
					goto l872
				l874:
					position, tokenIndex = position872, tokenIndex872
					if !_rules[ruleYearWithParens]() {
						goto l875
					}
					goto l872
				l875:
					position, tokenIndex = position872, tokenIndex872
					if !_rules[ruleYearWithPage]() {
						goto l876
					}
					goto l872
				l876:
					position, tokenIndex = position872, tokenIndex872
					if !_rules[ruleYearWithDot]() {
						goto l877
					}
					goto l872
				l877:
					position, tokenIndex = position872, tokenIndex872
					if !_rules[ruleYearWithChar]() {
						goto l878
					}
					goto l872
				l878:
					position, tokenIndex = position872, tokenIndex872
					if !_rules[ruleYearNum]() {
						goto l870
					}
				}
			l872:
				add(ruleYear, position871)
			}
			return true
		l870:
			position, tokenIndex = position870, tokenIndex870
			return false
		},
		/* 100 YearRange <- <(YearNum (Dash / Slash) (Nums+ ('a' / 'b' / 'c' / 'd' / 'e' / 'f' / 'g' / 'h' / 'i' / 'j' / 'k' / 'l' / 'm' / 'n' / 'o' / 'p' / 'q' / 'r' / 's' / 't' / 'u' / 'v' / 'w' / 'x' / 'y' / 'z' / '?')*))> */
		func() bool {
			position879, tokenIndex879 := position, tokenIndex
			{
				position880 := position
				if !_rules[ruleYearNum]() {
					goto l879
				}
				{
					position881, tokenIndex881 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l882
					}
					goto l881
				l882:
					position, tokenIndex = position881, tokenIndex881
					if !_rules[ruleSlash]() {
						goto l879
					}
				}
			l881:
				if !_rules[ruleNums]() {
					goto l879
				}
			l883:
				{
					position884, tokenIndex884 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l884
					}
					goto l883
				l884:
					position, tokenIndex = position884, tokenIndex884
				}
			l885:
				{
					position886, tokenIndex886 := position, tokenIndex
					{
						position887, tokenIndex887 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l888
						}
						position++
						goto l887
					l888:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('b') {
							goto l889
						}
						position++
						goto l887
					l889:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('c') {
							goto l890
						}
						position++
						goto l887
					l890:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('d') {
							goto l891
						}
						position++
						goto l887
					l891:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('e') {
							goto l892
						}
						position++
						goto l887
					l892:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('f') {
							goto l893
						}
						position++
						goto l887
					l893:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('g') {
							goto l894
						}
						position++
						goto l887
					l894:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('h') {
							goto l895
						}
						position++
						goto l887
					l895:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('i') {
							goto l896
						}
						position++
						goto l887
					l896:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('j') {
							goto l897
						}
						position++
						goto l887
					l897:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('k') {
							goto l898
						}
						position++
						goto l887
					l898:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('l') {
							goto l899
						}
						position++
						goto l887
					l899:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('m') {
							goto l900
						}
						position++
						goto l887
					l900:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('n') {
							goto l901
						}
						position++
						goto l887
					l901:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('o') {
							goto l902
						}
						position++
						goto l887
					l902:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('p') {
							goto l903
						}
						position++
						goto l887
					l903:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('q') {
							goto l904
						}
						position++
						goto l887
					l904:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('r') {
							goto l905
						}
						position++
						goto l887
					l905:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('s') {
							goto l906
						}
						position++
						goto l887
					l906:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('t') {
							goto l907
						}
						position++
						goto l887
					l907:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('u') {
							goto l908
						}
						position++
						goto l887
					l908:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('v') {
							goto l909
						}
						position++
						goto l887
					l909:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('w') {
							goto l910
						}
						position++
						goto l887
					l910:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('x') {
							goto l911
						}
						position++
						goto l887
					l911:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('y') {
							goto l912
						}
						position++
						goto l887
					l912:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('z') {
							goto l913
						}
						position++
						goto l887
					l913:
						position, tokenIndex = position887, tokenIndex887
						if buffer[position] != rune('?') {
							goto l886
						}
						position++
					}
				l887:
					goto l885
				l886:
					position, tokenIndex = position886, tokenIndex886
				}
				add(ruleYearRange, position880)
			}
			return true
		l879:
			position, tokenIndex = position879, tokenIndex879
			return false
		},
		/* 101 YearWithDot <- <(YearNum '.')> */
		func() bool {
			position914, tokenIndex914 := position, tokenIndex
			{
				position915 := position
				if !_rules[ruleYearNum]() {
					goto l914
				}
				if buffer[position] != rune('.') {
					goto l914
				}
				position++
				add(ruleYearWithDot, position915)
			}
			return true
		l914:
			position, tokenIndex = position914, tokenIndex914
			return false
		},
		/* 102 YearApprox <- <('[' _? YearNum _? ']')> */
		func() bool {
			position916, tokenIndex916 := position, tokenIndex
			{
				position917 := position
				if buffer[position] != rune('[') {
					goto l916
				}
				position++
				{
					position918, tokenIndex918 := position, tokenIndex
					if !_rules[rule_]() {
						goto l918
					}
					goto l919
				l918:
					position, tokenIndex = position918, tokenIndex918
				}
			l919:
				if !_rules[ruleYearNum]() {
					goto l916
				}
				{
					position920, tokenIndex920 := position, tokenIndex
					if !_rules[rule_]() {
						goto l920
					}
					goto l921
				l920:
					position, tokenIndex = position920, tokenIndex920
				}
			l921:
				if buffer[position] != rune(']') {
					goto l916
				}
				position++
				add(ruleYearApprox, position917)
			}
			return true
		l916:
			position, tokenIndex = position916, tokenIndex916
			return false
		},
		/* 103 YearWithPage <- <((YearWithChar / YearNum) _? ':' _? Nums+)> */
		func() bool {
			position922, tokenIndex922 := position, tokenIndex
			{
				position923 := position
				{
					position924, tokenIndex924 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l925
					}
					goto l924
				l925:
					position, tokenIndex = position924, tokenIndex924
					if !_rules[ruleYearNum]() {
						goto l922
					}
				}
			l924:
				{
					position926, tokenIndex926 := position, tokenIndex
					if !_rules[rule_]() {
						goto l926
					}
					goto l927
				l926:
					position, tokenIndex = position926, tokenIndex926
				}
			l927:
				if buffer[position] != rune(':') {
					goto l922
				}
				position++
				{
					position928, tokenIndex928 := position, tokenIndex
					if !_rules[rule_]() {
						goto l928
					}
					goto l929
				l928:
					position, tokenIndex = position928, tokenIndex928
				}
			l929:
				if !_rules[ruleNums]() {
					goto l922
				}
			l930:
				{
					position931, tokenIndex931 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l931
					}
					goto l930
				l931:
					position, tokenIndex = position931, tokenIndex931
				}
				add(ruleYearWithPage, position923)
			}
			return true
		l922:
			position, tokenIndex = position922, tokenIndex922
			return false
		},
		/* 104 YearWithParens <- <('(' (YearWithChar / YearNum) ')')> */
		func() bool {
			position932, tokenIndex932 := position, tokenIndex
			{
				position933 := position
				if buffer[position] != rune('(') {
					goto l932
				}
				position++
				{
					position934, tokenIndex934 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l935
					}
					goto l934
				l935:
					position, tokenIndex = position934, tokenIndex934
					if !_rules[ruleYearNum]() {
						goto l932
					}
				}
			l934:
				if buffer[position] != rune(')') {
					goto l932
				}
				position++
				add(ruleYearWithParens, position933)
			}
			return true
		l932:
			position, tokenIndex = position932, tokenIndex932
			return false
		},
		/* 105 YearWithChar <- <(YearNum LowerASCII)> */
		func() bool {
			position936, tokenIndex936 := position, tokenIndex
			{
				position937 := position
				if !_rules[ruleYearNum]() {
					goto l936
				}
				if !_rules[ruleLowerASCII]() {
					goto l936
				}
				add(ruleYearWithChar, position937)
			}
			return true
		l936:
			position, tokenIndex = position936, tokenIndex936
			return false
		},
		/* 106 YearNum <- <(('1' / '2') ('0' / '7' / '8' / '9') Nums (Nums / '?') '?'*)> */
		func() bool {
			position938, tokenIndex938 := position, tokenIndex
			{
				position939 := position
				{
					position940, tokenIndex940 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l941
					}
					position++
					goto l940
				l941:
					position, tokenIndex = position940, tokenIndex940
					if buffer[position] != rune('2') {
						goto l938
					}
					position++
				}
			l940:
				{
					position942, tokenIndex942 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l943
					}
					position++
					goto l942
				l943:
					position, tokenIndex = position942, tokenIndex942
					if buffer[position] != rune('7') {
						goto l944
					}
					position++
					goto l942
				l944:
					position, tokenIndex = position942, tokenIndex942
					if buffer[position] != rune('8') {
						goto l945
					}
					position++
					goto l942
				l945:
					position, tokenIndex = position942, tokenIndex942
					if buffer[position] != rune('9') {
						goto l938
					}
					position++
				}
			l942:
				if !_rules[ruleNums]() {
					goto l938
				}
				{
					position946, tokenIndex946 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l947
					}
					goto l946
				l947:
					position, tokenIndex = position946, tokenIndex946
					if buffer[position] != rune('?') {
						goto l938
					}
					position++
				}
			l946:
			l948:
				{
					position949, tokenIndex949 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l949
					}
					position++
					goto l948
				l949:
					position, tokenIndex = position949, tokenIndex949
				}
				add(ruleYearNum, position939)
			}
			return true
		l938:
			position, tokenIndex = position938, tokenIndex938
			return false
		},
		/* 107 NameUpperChar <- <(UpperChar / UpperCharExtended)> */
		func() bool {
			position950, tokenIndex950 := position, tokenIndex
			{
				position951 := position
				{
					position952, tokenIndex952 := position, tokenIndex
					if !_rules[ruleUpperChar]() {
						goto l953
					}
					goto l952
				l953:
					position, tokenIndex = position952, tokenIndex952
					if !_rules[ruleUpperCharExtended]() {
						goto l950
					}
				}
			l952:
				add(ruleNameUpperChar, position951)
			}
			return true
		l950:
			position, tokenIndex = position950, tokenIndex950
			return false
		},
		/* 108 UpperCharExtended <- <('Æ' / 'Œ' / 'Ö')> */
		func() bool {
			position954, tokenIndex954 := position, tokenIndex
			{
				position955 := position
				{
					position956, tokenIndex956 := position, tokenIndex
					if buffer[position] != rune('Æ') {
						goto l957
					}
					position++
					goto l956
				l957:
					position, tokenIndex = position956, tokenIndex956
					if buffer[position] != rune('Œ') {
						goto l958
					}
					position++
					goto l956
				l958:
					position, tokenIndex = position956, tokenIndex956
					if buffer[position] != rune('Ö') {
						goto l954
					}
					position++
				}
			l956:
				add(ruleUpperCharExtended, position955)
			}
			return true
		l954:
			position, tokenIndex = position954, tokenIndex954
			return false
		},
		/* 109 UpperChar <- <UpperASCII> */
		func() bool {
			position959, tokenIndex959 := position, tokenIndex
			{
				position960 := position
				if !_rules[ruleUpperASCII]() {
					goto l959
				}
				add(ruleUpperChar, position960)
			}
			return true
		l959:
			position, tokenIndex = position959, tokenIndex959
			return false
		},
		/* 110 NameLowerChar <- <(LowerChar / LowerCharExtended / MiscodedChar)> */
		func() bool {
			position961, tokenIndex961 := position, tokenIndex
			{
				position962 := position
				{
					position963, tokenIndex963 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l964
					}
					goto l963
				l964:
					position, tokenIndex = position963, tokenIndex963
					if !_rules[ruleLowerCharExtended]() {
						goto l965
					}
					goto l963
				l965:
					position, tokenIndex = position963, tokenIndex963
					if !_rules[ruleMiscodedChar]() {
						goto l961
					}
				}
			l963:
				add(ruleNameLowerChar, position962)
			}
			return true
		l961:
			position, tokenIndex = position961, tokenIndex961
			return false
		},
		/* 111 MiscodedChar <- <'�'> */
		func() bool {
			position966, tokenIndex966 := position, tokenIndex
			{
				position967 := position
				if buffer[position] != rune('�') {
					goto l966
				}
				position++
				add(ruleMiscodedChar, position967)
			}
			return true
		l966:
			position, tokenIndex = position966, tokenIndex966
			return false
		},
		/* 112 LowerCharExtended <- <('æ' / 'œ' / 'à' / 'â' / 'å' / 'ã' / 'ä' / 'á' / 'ç' / 'č' / 'é' / 'è' / 'ë' / 'í' / 'ì' / 'ï' / 'ň' / 'ñ' / 'ñ' / 'ó' / 'ò' / 'ô' / 'ø' / 'õ' / 'ö' / 'ú' / 'ù' / 'ü' / 'ŕ' / 'ř' / 'ŗ' / 'ſ' / 'š' / 'š' / 'ş' / 'ß' / 'ž')> */
		func() bool {
			position968, tokenIndex968 := position, tokenIndex
			{
				position969 := position
				{
					position970, tokenIndex970 := position, tokenIndex
					if buffer[position] != rune('æ') {
						goto l971
					}
					position++
					goto l970
				l971:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('œ') {
						goto l972
					}
					position++
					goto l970
				l972:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('à') {
						goto l973
					}
					position++
					goto l970
				l973:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('â') {
						goto l974
					}
					position++
					goto l970
				l974:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('å') {
						goto l975
					}
					position++
					goto l970
				l975:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ã') {
						goto l976
					}
					position++
					goto l970
				l976:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ä') {
						goto l977
					}
					position++
					goto l970
				l977:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('á') {
						goto l978
					}
					position++
					goto l970
				l978:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ç') {
						goto l979
					}
					position++
					goto l970
				l979:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('č') {
						goto l980
					}
					position++
					goto l970
				l980:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('é') {
						goto l981
					}
					position++
					goto l970
				l981:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('è') {
						goto l982
					}
					position++
					goto l970
				l982:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ë') {
						goto l983
					}
					position++
					goto l970
				l983:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('í') {
						goto l984
					}
					position++
					goto l970
				l984:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ì') {
						goto l985
					}
					position++
					goto l970
				l985:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ï') {
						goto l986
					}
					position++
					goto l970
				l986:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ň') {
						goto l987
					}
					position++
					goto l970
				l987:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ñ') {
						goto l988
					}
					position++
					goto l970
				l988:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ñ') {
						goto l989
					}
					position++
					goto l970
				l989:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ó') {
						goto l990
					}
					position++
					goto l970
				l990:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ò') {
						goto l991
					}
					position++
					goto l970
				l991:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ô') {
						goto l992
					}
					position++
					goto l970
				l992:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ø') {
						goto l993
					}
					position++
					goto l970
				l993:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('õ') {
						goto l994
					}
					position++
					goto l970
				l994:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ö') {
						goto l995
					}
					position++
					goto l970
				l995:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ú') {
						goto l996
					}
					position++
					goto l970
				l996:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ù') {
						goto l997
					}
					position++
					goto l970
				l997:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ü') {
						goto l998
					}
					position++
					goto l970
				l998:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ŕ') {
						goto l999
					}
					position++
					goto l970
				l999:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ř') {
						goto l1000
					}
					position++
					goto l970
				l1000:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ŗ') {
						goto l1001
					}
					position++
					goto l970
				l1001:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ſ') {
						goto l1002
					}
					position++
					goto l970
				l1002:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('š') {
						goto l1003
					}
					position++
					goto l970
				l1003:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('š') {
						goto l1004
					}
					position++
					goto l970
				l1004:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ş') {
						goto l1005
					}
					position++
					goto l970
				l1005:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ß') {
						goto l1006
					}
					position++
					goto l970
				l1006:
					position, tokenIndex = position970, tokenIndex970
					if buffer[position] != rune('ž') {
						goto l968
					}
					position++
				}
			l970:
				add(ruleLowerCharExtended, position969)
			}
			return true
		l968:
			position, tokenIndex = position968, tokenIndex968
			return false
		},
		/* 113 LowerChar <- <LowerASCII> */
		func() bool {
			position1007, tokenIndex1007 := position, tokenIndex
			{
				position1008 := position
				if !_rules[ruleLowerASCII]() {
					goto l1007
				}
				add(ruleLowerChar, position1008)
			}
			return true
		l1007:
			position, tokenIndex = position1007, tokenIndex1007
			return false
		},
		/* 114 SpaceCharEOI <- <(_ / !.)> */
		func() bool {
			position1009, tokenIndex1009 := position, tokenIndex
			{
				position1010 := position
				{
					position1011, tokenIndex1011 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1012
					}
					goto l1011
				l1012:
					position, tokenIndex = position1011, tokenIndex1011
					{
						position1013, tokenIndex1013 := position, tokenIndex
						if !matchDot() {
							goto l1013
						}
						goto l1009
					l1013:
						position, tokenIndex = position1013, tokenIndex1013
					}
				}
			l1011:
				add(ruleSpaceCharEOI, position1010)
			}
			return true
		l1009:
			position, tokenIndex = position1009, tokenIndex1009
			return false
		},
		/* 115 Nums <- <[0-9]> */
		func() bool {
			position1014, tokenIndex1014 := position, tokenIndex
			{
				position1015 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l1014
				}
				position++
				add(ruleNums, position1015)
			}
			return true
		l1014:
			position, tokenIndex = position1014, tokenIndex1014
			return false
		},
		/* 116 LowerGreek <- <[α-ω]> */
		func() bool {
			position1016, tokenIndex1016 := position, tokenIndex
			{
				position1017 := position
				if c := buffer[position]; c < rune('α') || c > rune('ω') {
					goto l1016
				}
				position++
				add(ruleLowerGreek, position1017)
			}
			return true
		l1016:
			position, tokenIndex = position1016, tokenIndex1016
			return false
		},
		/* 117 LowerASCII <- <[a-z]> */
		func() bool {
			position1018, tokenIndex1018 := position, tokenIndex
			{
				position1019 := position
				if c := buffer[position]; c < rune('a') || c > rune('z') {
					goto l1018
				}
				position++
				add(ruleLowerASCII, position1019)
			}
			return true
		l1018:
			position, tokenIndex = position1018, tokenIndex1018
			return false
		},
		/* 118 UpperASCII <- <[A-Z]> */
		func() bool {
			position1020, tokenIndex1020 := position, tokenIndex
			{
				position1021 := position
				if c := buffer[position]; c < rune('A') || c > rune('Z') {
					goto l1020
				}
				position++
				add(ruleUpperASCII, position1021)
			}
			return true
		l1020:
			position, tokenIndex = position1020, tokenIndex1020
			return false
		},
		/* 119 Apostrophe <- <(ApostrOther / ApostrASCII)> */
		func() bool {
			position1022, tokenIndex1022 := position, tokenIndex
			{
				position1023 := position
				{
					position1024, tokenIndex1024 := position, tokenIndex
					if !_rules[ruleApostrOther]() {
						goto l1025
					}
					goto l1024
				l1025:
					position, tokenIndex = position1024, tokenIndex1024
					if !_rules[ruleApostrASCII]() {
						goto l1022
					}
				}
			l1024:
				add(ruleApostrophe, position1023)
			}
			return true
		l1022:
			position, tokenIndex = position1022, tokenIndex1022
			return false
		},
		/* 120 ApostrASCII <- <'\''> */
		func() bool {
			position1026, tokenIndex1026 := position, tokenIndex
			{
				position1027 := position
				if buffer[position] != rune('\'') {
					goto l1026
				}
				position++
				add(ruleApostrASCII, position1027)
			}
			return true
		l1026:
			position, tokenIndex = position1026, tokenIndex1026
			return false
		},
		/* 121 ApostrOther <- <('‘' / '’')> */
		func() bool {
			position1028, tokenIndex1028 := position, tokenIndex
			{
				position1029 := position
				{
					position1030, tokenIndex1030 := position, tokenIndex
					if buffer[position] != rune('‘') {
						goto l1031
					}
					position++
					goto l1030
				l1031:
					position, tokenIndex = position1030, tokenIndex1030
					if buffer[position] != rune('’') {
						goto l1028
					}
					position++
				}
			l1030:
				add(ruleApostrOther, position1029)
			}
			return true
		l1028:
			position, tokenIndex = position1028, tokenIndex1028
			return false
		},
		/* 122 Dash <- <'-'> */
		func() bool {
			position1032, tokenIndex1032 := position, tokenIndex
			{
				position1033 := position
				if buffer[position] != rune('-') {
					goto l1032
				}
				position++
				add(ruleDash, position1033)
			}
			return true
		l1032:
			position, tokenIndex = position1032, tokenIndex1032
			return false
		},
		/* 123 Slash <- <'/'> */
		func() bool {
			position1034, tokenIndex1034 := position, tokenIndex
			{
				position1035 := position
				if buffer[position] != rune('/') {
					goto l1034
				}
				position++
				add(ruleSlash, position1035)
			}
			return true
		l1034:
			position, tokenIndex = position1034, tokenIndex1034
			return false
		},
		/* 124 _ <- <(MultipleSpace / SingleSpace)> */
		func() bool {
			position1036, tokenIndex1036 := position, tokenIndex
			{
				position1037 := position
				{
					position1038, tokenIndex1038 := position, tokenIndex
					if !_rules[ruleMultipleSpace]() {
						goto l1039
					}
					goto l1038
				l1039:
					position, tokenIndex = position1038, tokenIndex1038
					if !_rules[ruleSingleSpace]() {
						goto l1036
					}
				}
			l1038:
				add(rule_, position1037)
			}
			return true
		l1036:
			position, tokenIndex = position1036, tokenIndex1036
			return false
		},
		/* 125 MultipleSpace <- <(SingleSpace SingleSpace+)> */
		func() bool {
			position1040, tokenIndex1040 := position, tokenIndex
			{
				position1041 := position
				if !_rules[ruleSingleSpace]() {
					goto l1040
				}
				if !_rules[ruleSingleSpace]() {
					goto l1040
				}
			l1042:
				{
					position1043, tokenIndex1043 := position, tokenIndex
					if !_rules[ruleSingleSpace]() {
						goto l1043
					}
					goto l1042
				l1043:
					position, tokenIndex = position1043, tokenIndex1043
				}
				add(ruleMultipleSpace, position1041)
			}
			return true
		l1040:
			position, tokenIndex = position1040, tokenIndex1040
			return false
		},
		/* 126 SingleSpace <- <(' ' / OtherSpace)> */
		func() bool {
			position1044, tokenIndex1044 := position, tokenIndex
			{
				position1045 := position
				{
					position1046, tokenIndex1046 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l1047
					}
					position++
					goto l1046
				l1047:
					position, tokenIndex = position1046, tokenIndex1046
					if !_rules[ruleOtherSpace]() {
						goto l1044
					}
				}
			l1046:
				add(ruleSingleSpace, position1045)
			}
			return true
		l1044:
			position, tokenIndex = position1044, tokenIndex1044
			return false
		},
		/* 127 OtherSpace <- <('\u3000' / '\u00a0' / '\t' / '\r' / '\n' / '\f' / '\v')> */
		func() bool {
			position1048, tokenIndex1048 := position, tokenIndex
			{
				position1049 := position
				{
					position1050, tokenIndex1050 := position, tokenIndex
					if buffer[position] != rune('\u3000') {
						goto l1051
					}
					position++
					goto l1050
				l1051:
					position, tokenIndex = position1050, tokenIndex1050
					if buffer[position] != rune('\u00a0') {
						goto l1052
					}
					position++
					goto l1050
				l1052:
					position, tokenIndex = position1050, tokenIndex1050
					if buffer[position] != rune('\t') {
						goto l1053
					}
					position++
					goto l1050
				l1053:
					position, tokenIndex = position1050, tokenIndex1050
					if buffer[position] != rune('\r') {
						goto l1054
					}
					position++
					goto l1050
				l1054:
					position, tokenIndex = position1050, tokenIndex1050
					if buffer[position] != rune('\n') {
						goto l1055
					}
					position++
					goto l1050
				l1055:
					position, tokenIndex = position1050, tokenIndex1050
					if buffer[position] != rune('\f') {
						goto l1056
					}
					position++
					goto l1050
				l1056:
					position, tokenIndex = position1050, tokenIndex1050
					if buffer[position] != rune('\v') {
						goto l1048
					}
					position++
				}
			l1050:
				add(ruleOtherSpace, position1049)
			}
			return true
		l1048:
			position, tokenIndex = position1048, tokenIndex1048
			return false
		},
		/* 128 END <- <!.> */
		func() bool {
			position1057, tokenIndex1057 := position, tokenIndex
			{
				position1058 := position
				{
					position1059, tokenIndex1059 := position, tokenIndex
					if !matchDot() {
						goto l1059
					}
					goto l1057
				l1059:
					position, tokenIndex = position1059, tokenIndex1059
				}
				add(ruleEND, position1058)
			}
			return true
		l1057:
			position, tokenIndex = position1057, tokenIndex1057
			return false
		},
	}
	p.rules = _rules
	return nil
}
